
@model SurveyApp.WebMvc.Models.RequirementDetailViewModel
@{
    ViewData["Title"] = "Requirement Details";
    var isAdmin = User.IsInRole("Admin");
}

<div class="w-full px-4 sm:px-6 lg:px-8 py-10">
    <div class="w-full max-w-[1000px] mx-auto bg-white p-6">
        <div class="mb-6">
            <a href="@Url.Action("Index")" class="text-primary hover:text-primary/80 flex items-center gap-1">
                <i class="fas fa-arrow-left"></i> Back to Requirements
            </a>
        </div>
        
        <div class="mb-6">
            <h1 class="text-2xl font-bold tracking-tight sm:text-3xl mb-2">@Model.Requirement.Title</h1>
            <div class="flex items-center gap-2 flex-wrap">
                @{
                    string statusClass = "bg-gray-100 text-gray-800";
                    switch (Model.Requirement.Status.ToLower())
                    {
                        case "proposed":
                            statusClass = "bg-blue-100 text-blue-800";
                            break;
                        case "in-progress":
                        case "in progress":
                            statusClass = "bg-yellow-100 text-yellow-800";
                            break;
                        case "implemented":
                            statusClass = "bg-green-100 text-green-800";
                            break;
                        case "rejected":
                            statusClass = "bg-red-100 text-red-800";
                            break;
                    }
                    
                    string priorityClass = "bg-gray-100 text-gray-800";
                    if (!string.IsNullOrEmpty(Model.Requirement.Priority))
                    {
                        switch (Model.Requirement.Priority.ToLower())
                        {
                            case "critical":
                                priorityClass = "bg-red-100 text-red-800";
                                break;
                            case "high":
                                priorityClass = "bg-orange-100 text-orange-800";
                                break;
                            case "medium":
                                priorityClass = "bg-blue-100 text-blue-800";
                                break;
                            case "low":
                                priorityClass = "bg-green-100 text-green-800";
                                break;
                        }
                    }
                }
                
                <span class="px-2 py-1 rounded-full text-xs font-medium @statusClass">
                    @(Model.Requirement.Status == "in-progress" ? "In Progress" : Model.Requirement.Status.FirstCharToUpper())
                </span>
                
                @if (!string.IsNullOrEmpty(Model.Requirement.Priority))
                {
                    <span class="px-2 py-1 rounded-full text-xs font-medium @priorityClass">
                        @Model.Requirement.Priority.FirstCharToUpper()
                    </span>
                }
                
                @if (!string.IsNullOrEmpty(Model.Requirement.Category))
                {
                    <span class="px-2 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800">
                        @Model.Requirement.Category
                    </span>
                }
            </div>
        </div>
        
        <div class="space-y-6">
            <div class="bg-muted/40 p-4 rounded-md">
                <h3 class="font-medium text-sm mb-2 flex items-center gap-2">
                    <i class="fas fa-file-alt"></i> Description
                </h3>
                <p class="text-muted-foreground">@Model.Requirement.Description</p>
            </div>
            
            @if (!string.IsNullOrEmpty(Model.Requirement.AcceptanceCriteria))
            {
                <div class="bg-muted/40 p-4 rounded-md">
                    <h3 class="font-medium text-sm mb-2">Acceptance Criteria</h3>
                    <p class="text-muted-foreground">@Model.Requirement.AcceptanceCriteria</p>
                </div>
            }
            
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                    <h3 class="font-medium text-sm mb-2 flex items-center gap-2">
                        <i class="fas fa-user"></i> Submitted By
                    </h3>
                    <p class="text-muted-foreground">
                        @(Model.Requirement.IsAnonymous ? "Anonymous" : Model.Requirement.CustomerName)
                    </p>
                    @if (!Model.Requirement.IsAnonymous)
                    {
                        <p class="text-xs text-muted-foreground">@Model.Requirement.CustomerEmail</p>
                    }
                </div>
                
                <div>
                    <h3 class="font-medium text-sm mb-2 flex items-center gap-2">
                        <i class="fas fa-calendar"></i> Date Information
                    </h3>
                    <p class="text-muted-foreground text-sm">
                        Created: @Model.Requirement.CreatedAt.ToLocalTime().ToString("g")
                    </p>
                    @if (Model.Requirement.TargetDate.HasValue)
                    {
                        <p class="text-muted-foreground text-sm">
                            Target completion: @Model.Requirement.TargetDate.Value.ToLocalTime().ToString("d")
                        </p>
                    }
                </div>
            </div>
            
            @if (!string.IsNullOrEmpty(Model.Requirement.ProjectArea))
            {
                <div>
                    <h3 class="font-medium text-sm mb-1">Project Area</h3>
                    <p class="text-muted-foreground">@Model.Requirement.ProjectArea</p>
                </div>
            }
            
            @if (!string.IsNullOrEmpty(Model.Requirement.Response))
            {
                <hr class="my-4" />
                <div>
                    <h3 class="font-medium text-sm mb-2 flex items-center gap-2">
                        <i class="fas fa-reply"></i> Response
                    </h3>
                    <p class="text-muted-foreground">@Model.Requirement.Response</p>
                    @if (Model.Requirement.ResponseDate.HasValue)
                    {
                        <p class="text-xs text-muted-foreground mt-1">
                            Responded on @Model.Requirement.ResponseDate.Value.ToLocalTime().ToString("g")
                        </p>
                    }
                </div>
            }
            
            @if (Model.Requirement.CompletionPercentage > 0)
            {
                <div>
                    <h3 class="font-medium text-sm mb-2 flex items-center gap-2">
                        <i class="fas fa-clock"></i> Progress
                    </h3>
                    <div class="flex items-center gap-2">
                        <div class="w-full h-2 bg-muted rounded-full overflow-hidden">
                            <div class="h-full bg-primary rounded-full" style="width: @(Model.Requirement.CompletionPercentage)%"></div>
                        </div>
                        <span class="text-sm font-medium">@Model.Requirement.CompletionPercentage%</span>
                    </div>
                </div>
            }
            
            @if (isAdmin)
            {
                <hr class="my-4" />
                <div>
                    <h3 class="font-medium mb-4">Update Status</h3>
                    <form asp-action="UpdateStatus" method="post" class="space-y-4">
                        <input type="hidden" name="id" value="@Model.Requirement.Id" />
                        
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div class="space-y-2">
                                <label for="status" class="text-sm font-medium">Status</label>
                                <select id="status" name="status" class="form-select w-full rounded-md border" required>
                                    <option value="proposed" @(Model.Requirement.Status.ToLower() == "proposed" ? "selected" : "")>Proposed</option>
                                    <option value="in-progress" @(Model.Requirement.Status.ToLower() == "in-progress" ? "selected" : "")>In Progress</option>
                                    <option value="implemented" @(Model.Requirement.Status.ToLower() == "implemented" ? "selected" : "")>Implemented</option>
                                    <option value="rejected" @(Model.Requirement.Status.ToLower() == "rejected" ? "selected" : "")>Rejected</option>
                                </select>
                            </div>
                            
                            <div class="space-y-2">
                                <label for="completionPercentage" class="text-sm font-medium">Completion Percentage</label>
                                <input type="number" id="completionPercentage" name="completionPercentage" min="0" max="100" value="@Model.Requirement.CompletionPercentage" class="form-input w-full rounded-md border" />
                            </div>
                        </div>
                        
                        <div class="space-y-2">
                            <label for="response" class="text-sm font-medium">Response</label>
                            <textarea id="response" name="response" rows="4" class="form-textarea w-full rounded-md border"></textarea>
                        </div>
                        
                        <div class="flex justify-end">
                            <button type="submit" class="btn btn-primary">Update Status</button>
                        </div>
                    </form>
                </div>
            }
        </div>
    </div>
</div>
