
<div class="bg-white p-6 rounded-lg shadow-md animate-fade-in">
    <div class="flex justify-between items-center mb-4">
        <h3 class="text-lg font-bold">Datos Actualizados</h3>
        <div class="flex gap-2">
            <button id="exportButton" class="text-blue-500 hover:text-blue-700" title="Exportar datos">
                <i class="fas fa-download"></i>
            </button>
            <button class="text-gray-500 hover:text-gray-700" onclick="closeAnimatedPartial()">
                <i class="fas fa-times"></i>
            </button>
        </div>
    </div>
    
    <p>Este contenido se ha cargado de forma dinámica y con una animación de entrada.</p>
    
    <!-- Selector de rango de tiempo (nuevo) -->
    <div class="flex justify-end mb-4 mt-3">
        <select id="timeRangeSelector" class="px-3 py-1.5 border rounded text-sm">
            <option value="3">Últimos 3 meses</option>
            <option value="6">Últimos 6 meses</option>
            <option value="12">Últimos 12 meses</option>
        </select>
    </div>
    
    <!-- Tabs como en React (nuevo) -->
    <div class="mb-6">
        <div class="border-b flex" id="tabsList">
            <button class="py-2 px-4 text-sm font-medium border-b-2 border-blue-500 text-blue-600 tab-button active" data-tab="metrics">
                Métricas
            </button>
            <button class="py-2 px-4 text-sm font-medium border-b-2 border-transparent hover:text-blue-600 hover:border-blue-300 tab-button" data-tab="chart">
                Gráficos
            </button>
            <button class="py-2 px-4 text-sm font-medium border-b-2 border-transparent hover:text-blue-600 hover:border-blue-300 tab-button" data-tab="monthly">
                Desglose Mensual
            </button>
        </div>
        
        <!-- Tab Content: Métricas -->
        <div class="tab-content active" id="metricsTab">
            <div class="mt-6 grid grid-cols-1 sm:grid-cols-2 gap-4">
                <div class="border rounded-md p-3 hover:shadow-md transition-all duration-200 cursor-pointer" onclick="showDetailedMetric('nuevas-respuestas')">
                    <div class="text-sm font-medium">Nuevas Respuestas</div>
                    <div class="text-2xl font-bold mt-1">+28</div>
                    <div class="text-xs text-green-600 mt-1">
                        <i class="fas fa-arrow-up mr-1"></i> 12% desde ayer
                    </div>
                </div>
                
                <div class="border rounded-md p-3 hover:shadow-md transition-all duration-200 cursor-pointer" onclick="showDetailedMetric('tasa-finalizacion')">
                    <div class="text-sm font-medium">Tasa de Finalización</div>
                    <div class="text-2xl font-bold mt-1">94%</div>
                    <div class="text-xs text-green-600 mt-1">
                        <i class="fas fa-arrow-up mr-1"></i> 3% desde ayer
                    </div>
                </div>
                
                <!-- Nuevas métricas adicionales -->
                <div class="border rounded-md p-3 hover:shadow-md transition-all duration-200 cursor-pointer" onclick="showDetailedMetric('tiempo-promedio')">
                    <div class="text-sm font-medium">Tiempo Promedio</div>
                    <div class="text-2xl font-bold mt-1">3.5 min</div>
                    <div class="text-xs text-red-600 mt-1">
                        <i class="fas fa-arrow-down mr-1"></i> 2% desde ayer
                    </div>
                </div>
                
                <div class="border rounded-md p-3 hover:shadow-md transition-all duration-200 cursor-pointer" onclick="showDetailedMetric('categorias-principales')">
                    <div class="text-sm font-medium">Categorías Principales</div>
                    <div class="flex flex-wrap gap-1 mt-2">
                        <span class="bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded">Producto (45%)</span>
                        <span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded">Servicio (30%)</span>
                        <span class="bg-purple-100 text-purple-800 text-xs px-2 py-1 rounded">Soporte (25%)</span>
                    </div>
                </div>
            </div>
            
            <div class="mt-4">
                <div class="text-sm font-medium mb-2">Dispositivos Utilizados</div>
                <div class="w-full bg-gray-200 h-6 rounded-full overflow-hidden">
                    <div class="flex h-full">
                        <div class="bg-blue-500 h-full flex items-center justify-center text-xs text-white" style="width: 45%;">Desktop 45%</div>
                        <div class="bg-green-500 h-full flex items-center justify-center text-xs text-white" style="width: 40%;">Mobile 40%</div>
                        <div class="bg-purple-500 h-full flex items-center justify-center text-xs text-white" style="width: 15%;">Tablet 15%</div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Tab Content: Gráficos -->
        <div class="tab-content hidden" id="chartTab">
            <div class="mt-4" id="responseTimesChart" style="height: 200px;"></div>
            
            <div class="mt-6">
                <div class="text-sm font-medium mb-2">Distribución por Categoría</div>
                <div id="categoryDistributionChart" style="height: 200px;"></div>
            </div>
        </div>
        
        <!-- Tab Content: Desglose Mensual -->
        <div class="tab-content hidden" id="monthlyTab">
            <div class="space-y-6 mt-4">
                <!-- Primer mes -->
                <div class="border rounded-lg p-4">
                    <h3 class="text-lg font-medium flex items-center gap-2">
                        <i class="fas fa-calendar"></i>
                        Junio 2023
                    </h3>
                    
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mt-4">
                        <div class="bg-gray-100 rounded-md p-3">
                            <p class="text-sm text-gray-600">Total Sugerencias</p>
                            <p class="text-2xl font-bold">125</p>
                        </div>
                        
                        <div class="bg-gray-100 rounded-md p-3">
                            <p class="text-sm text-gray-600">Tasa de Implementación</p>
                            <p class="text-2xl font-bold">72%</p>
                        </div>
                        
                        <div class="bg-gray-100 rounded-md p-3">
                            <p class="text-sm text-gray-600">Categorías Principales</p>
                            <div class="flex flex-wrap gap-1 mt-1">
                                <span class="bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded">Producto (12)</span>
                                <span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded">UX (8)</span>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Segundo mes -->
                <div class="border rounded-lg p-4">
                    <h3 class="text-lg font-medium flex items-center gap-2">
                        <i class="fas fa-calendar"></i>
                        Mayo 2023
                    </h3>
                    
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mt-4">
                        <div class="bg-gray-100 rounded-md p-3">
                            <p class="text-sm text-gray-600">Total Sugerencias</p>
                            <p class="text-2xl font-bold">98</p>
                        </div>
                        
                        <div class="bg-gray-100 rounded-md p-3">
                            <p class="text-sm text-gray-600">Tasa de Implementación</p>
                            <p class="text-2xl font-bold">65%</p>
                        </div>
                        
                        <div class="bg-gray-100 rounded-md p-3">
                            <p class="text-sm text-gray-600">Categorías Principales</p>
                            <div class="flex flex-wrap gap-1 mt-1">
                                <span class="bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded">Producto (10)</span>
                                <span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded">UX (5)</span>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Tercer mes -->
                <div class="border rounded-lg p-4">
                    <h3 class="text-lg font-medium flex items-center gap-2">
                        <i class="fas fa-calendar"></i>
                        Abril 2023
                    </h3>
                    
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mt-4">
                        <div class="bg-gray-100 rounded-md p-3">
                            <p class="text-sm text-gray-600">Total Sugerencias</p>
                            <p class="text-2xl font-bold">112</p>
                        </div>
                        
                        <div class="bg-gray-100 rounded-md p-3">
                            <p class="text-sm text-gray-600">Tasa de Implementación</p>
                            <p class="text-2xl font-bold">78%</p>
                        </div>
                        
                        <div class="bg-gray-100 rounded-md p-3">
                            <p class="text-sm text-gray-600">Categorías Principales</p>
                            <div class="flex flex-wrap gap-1 mt-1">
                                <span class="bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded">Producto (14)</span>
                                <span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded">UX (7)</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="mt-4 flex justify-end">
        <button class="px-3 py-1.5 bg-gray-200 text-gray-800 rounded mr-2 hover:bg-gray-300 text-sm" onclick="refreshData()">
            <i class="fas fa-sync-alt mr-1"></i> Actualizar
        </button>
        <button class="px-3 py-1.5 text-sm bg-blue-600 text-white rounded hover:bg-blue-700" onclick="viewAllAnalytics()">
            Ver Análisis Completo
        </button>
        <button class="px-3 py-1.5 text-sm border border-gray-300 text-gray-700 rounded hover:bg-gray-50 ml-2" onclick="closeAnimatedPartial()">
            Cerrar
        </button>
    </div>
</div>

<!-- Modal de métricas detalladas similar al componente React -->
<div id="detailedMetricModal" class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden flex items-center justify-center">
    <div class="bg-white rounded-lg p-6 max-w-md w-full animate-scale-in">
        <div class="flex justify-between items-center mb-4">
            <h3 class="text-lg font-bold" id="detailedMetricTitle">Detalle de Métrica</h3>
            <button class="text-gray-500 hover:text-gray-700" onclick="closeDetailedMetric()">
                <i class="fas fa-times"></i>
            </button>
        </div>
        <div id="detailedMetricContent" class="space-y-4">
            <!-- Contenido dinámico -->
        </div>
        <div class="mt-4 text-right">
            <button class="px-3 py-1.5 text-sm border border-gray-300 text-gray-700 rounded hover:bg-gray-50" onclick="closeDetailedMetric()">
                Cerrar
            </button>
        </div>
    </div>
</div>

<!-- Modal de exportación para clonación completa -->
<div id="exportModal" class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden flex items-center justify-center">
    <div class="bg-white rounded-lg p-6 max-w-md w-full animate-scale-in">
        <div class="flex justify-between items-center mb-4">
            <h3 class="text-lg font-bold">Exportar Datos</h3>
            <button class="text-gray-500 hover:text-gray-700" onclick="closeExportModal()">
                <i class="fas fa-times"></i>
            </button>
        </div>
        <div class="space-y-4">
            <p class="text-gray-600">Seleccione el formato para exportar los datos:</p>
            
            <div class="space-y-2">
                <div class="flex items-center p-3 border rounded-md hover:bg-gray-50 cursor-pointer">
                    <i class="fas fa-file-excel text-green-600 text-xl mr-3"></i>
                    <div>
                        <h4 class="font-medium">Excel (.xlsx)</h4>
                        <p class="text-xs text-gray-500">Exportar como hoja de cálculo</p>
                    </div>
                </div>
                
                <div class="flex items-center p-3 border rounded-md hover:bg-gray-50 cursor-pointer">
                    <i class="fas fa-file-csv text-blue-600 text-xl mr-3"></i>
                    <div>
                        <h4 class="font-medium">CSV</h4>
                        <p class="text-xs text-gray-500">Valores separados por comas</p>
                    </div>
                </div>
                
                <div class="flex items-center p-3 border rounded-md hover:bg-gray-50 cursor-pointer">
                    <i class="fas fa-file-pdf text-red-600 text-xl mr-3"></i>
                    <div>
                        <h4 class="font-medium">PDF</h4>
                        <p class="text-xs text-gray-500">Documento portátil</p>
                    </div>
                </div>
            </div>
            
            <div class="flex items-center mt-6">
                <input type="checkbox" id="includeCharts" class="mr-2">
                <label for="includeCharts" class="text-sm">Incluir gráficos en la exportación</label>
            </div>
        </div>
        <div class="mt-6 flex justify-end gap-2">
            <button class="px-3 py-1.5 text-sm border border-gray-300 text-gray-700 rounded hover:bg-gray-50" onclick="closeExportModal()">
                Cancelar
            </button>
            <button class="px-3 py-1.5 text-sm bg-blue-600 text-white rounded hover:bg-blue-700" onclick="performExport()">
                Exportar
            </button>
        </div>
    </div>
</div>

<div id="toastContainer" class="fixed bottom-4 right-4 z-50"></div>

<script src="https://cdn.jsdelivr.net/npm/chart.js@3.9.1/dist/chart.min.js"></script>
<script>
    // Inicializar gráficos y configuración
    let responseTimesChart;
    let categoryDistributionChart;
    
    document.addEventListener('DOMContentLoaded', function() {
        initCharts();
        setupTabNavigation();
        
        // Configurar botón de exportación para mostrar modal
        document.getElementById('exportButton').addEventListener('click', function() {
            showExportModal();
        });
        
        // Configurar selector de rango de tiempo
        document.getElementById('timeRangeSelector').addEventListener('change', function() {
            const selectedMonths = parseInt(this.value);
            updateDataByTimeRange(selectedMonths);
        });
    });
    
    function setupTabNavigation() {
        const tabButtons = document.querySelectorAll('.tab-button');
        
        tabButtons.forEach(button => {
            button.addEventListener('click', function() {
                // Ocultar todos los tabs
                document.querySelectorAll('.tab-content').forEach(tab => {
                    tab.classList.add('hidden');
                    tab.classList.remove('active');
                });
                
                // Quitar activo de todos los botones
                tabButtons.forEach(btn => {
                    btn.classList.remove('active');
                    btn.classList.remove('border-blue-500');
                    btn.classList.remove('text-blue-600');
                    btn.classList.add('border-transparent');
                });
                
                // Activar tab seleccionado
                const tabToShow = this.dataset.tab;
                document.getElementById(tabToShow + 'Tab').classList.remove('hidden');
                document.getElementById(tabToShow + 'Tab').classList.add('active');
                
                // Activar botón
                this.classList.add('active');
                this.classList.add('border-blue-500');
                this.classList.add('text-blue-600');
                this.classList.remove('border-transparent');
                
                // Actualizar gráficos si es necesario
                if (tabToShow === 'chart') {
                    if (responseTimesChart) responseTimesChart.resize();
                    if (categoryDistributionChart) categoryDistributionChart.resize();
                }
            });
        });
    }
    
    function initCharts() {
        initResponseTimesChart();
        initCategoryDistributionChart();
    }
    
    function initResponseTimesChart() {
        const ctx = document.getElementById('responseTimesChart').getContext('2d');
        
        responseTimesChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: ['Lun', 'Mar', 'Mié', 'Jue', 'Vie', 'Sáb', 'Dom'],
                datasets: [{
                    label: 'Tiempo Promedio de Respuesta (min)',
                    data: [4.2, 3.8, 5.1, 4.5, 3.2, 2.9, 3.5],
                    backgroundColor: 'rgba(59, 130, 246, 0.2)',
                    borderColor: 'rgba(59, 130, 246, 1)',
                    borderWidth: 2,
                    tension: 0.3,
                    fill: true
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: true,
                        position: 'top'
                    },
                    tooltip: {
                        mode: 'index',
                        intersect: false
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Minutos'
                        }
                    }
                }
            }
        });
    }
    
    function initCategoryDistributionChart() {
        const ctx = document.getElementById('categoryDistributionChart').getContext('2d');
        
        categoryDistributionChart = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ['Producto', 'UX/UI', 'Soporte', 'Funcionalidad', 'Otro'],
                datasets: [{
                    data: [45, 25, 15, 10, 5],
                    backgroundColor: [
                        'rgba(59, 130, 246, 0.7)',
                        'rgba(16, 185, 129, 0.7)',
                        'rgba(139, 92, 246, 0.7)',
                        'rgba(251, 191, 36, 0.7)',
                        'rgba(156, 163, 175, 0.7)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: true,
                        position: 'bottom'
                    }
                }
            }
        });
    }
    
    function closeAnimatedPartial() {
        const element = document.querySelector('.animate-fade-in');
        element.classList.add('animate-fade-out');
        setTimeout(() => {
            element.remove();
        }, 300);
    }
    
    function showDetailedMetric(metricType) {
        const modal = document.getElementById('detailedMetricModal');
        const title = document.getElementById('detailedMetricTitle');
        const content = document.getElementById('detailedMetricContent');
        
        // Configurar el contenido según la métrica seleccionada
        if (metricType === 'nuevas-respuestas') {
            title.textContent = 'Detalle de Nuevas Respuestas';
            content.innerHTML = `
                <div class="bg-blue-50 p-3 rounded-md">
                    <div class="text-3xl font-bold text-blue-700">+28</div>
                    <div class="text-sm text-blue-600">Nuevas respuestas en las últimas 24 horas</div>
                </div>
                <div class="space-y-2 mt-3">
                    <div class="text-sm font-medium">Desglose por hora:</div>
                    <div class="grid grid-cols-2 gap-2">
                        <div class="border rounded p-2 text-center">
                            <div class="text-sm text-gray-500">Mañana (6-12h)</div>
                            <div class="font-bold">12</div>
                        </div>
                        <div class="border rounded p-2 text-center">
                            <div class="text-sm text-gray-500">Tarde (12-18h)</div>
                            <div class="font-bold">9</div>
                        </div>
                        <div class="border rounded p-2 text-center">
                            <div class="text-sm text-gray-500">Noche (18-24h)</div>
                            <div class="font-bold">5</div>
                        </div>
                        <div class="border rounded p-2 text-center">
                            <div class="text-sm text-gray-500">Madrugada (0-6h)</div>
                            <div class="font-bold">2</div>
                        </div>
                    </div>
                </div>
                <div class="mt-3">
                    <button class="w-full px-3 py-2 text-sm bg-blue-600 text-white rounded hover:bg-blue-700">
                        Ver todas las respuestas
                    </button>
                </div>
            `;
        } else if (metricType === 'tasa-finalizacion') {
            title.textContent = 'Detalle de Tasa de Finalización';
            content.innerHTML = `
                <div class="bg-green-50 p-3 rounded-md">
                    <div class="text-3xl font-bold text-green-700">94%</div>
                    <div class="text-sm text-green-600">Tasa de finalización actual</div>
                </div>
                <div class="space-y-2 mt-3">
                    <div class="text-sm font-medium">Evolución semanal:</div>
                    <div class="w-full bg-gray-200 h-4 rounded-full overflow-hidden">
                        <div class="bg-green-500 h-full" style="width: 89%"></div>
                    </div>
                    <div class="text-xs text-gray-500">Semana anterior: 89%</div>
                    
                    <div class="w-full bg-gray-200 h-4 rounded-full overflow-hidden mt-2">
                        <div class="bg-green-500 h-full" style="width: 91%"></div>
                    </div>
                    <div class="text-xs text-gray-500">Hace dos semanas: 91%</div>
                    
                    <div class="w-full bg-gray-200 h-4 rounded-full overflow-hidden mt-2">
                        <div class="bg-green-500 h-full" style="width: 94%"></div>
                    </div>
                    <div class="text-xs text-gray-500">Esta semana: 94%</div>
                </div>
                <div class="mt-3 text-sm text-gray-600">
                    <p>Principales razones de abandono:</p>
                    <ul class="list-disc list-inside mt-1">
                        <li>Preguntas demasiado largas (45%)</li>
                        <li>Problemas técnicos (30%)</li>
                        <li>Falta de interés (25%)</li>
                    </ul>
                </div>
            `;
        } else if (metricType === 'tiempo-promedio') {
            title.textContent = 'Detalle de Tiempo Promedio';
            content.innerHTML = `
                <div class="bg-blue-50 p-3 rounded-md">
                    <div class="text-3xl font-bold text-blue-700">3.5 min</div>
                    <div class="text-sm text-blue-600">Tiempo promedio de respuesta</div>
                </div>
                <div class="space-y-2 mt-3">
                    <div class="text-sm font-medium">Comparativa por dispositivo:</div>
                    <div class="flex justify-between items-center">
                        <div class="text-sm">Desktop:</div>
                        <div class="text-sm font-medium">2.8 min</div>
                    </div>
                    <div class="flex justify-between items-center">
                        <div class="text-sm">Mobile:</div>
                        <div class="text-sm font-medium">4.2 min</div>
                    </div>
                    <div class="flex justify-between items-center">
                        <div class="text-sm">Tablet:</div>
                        <div class="text-sm font-medium">3.5 min</div>
                    </div>
                </div>
                <div class="mt-3">
                    <div class="text-sm font-medium">Evolución semanal:</div>
                    <canvas id="detailedTimeChart" height="150"></canvas>
                </div>
            `;
            
            // Inicializar gráfico detallado después de que aparezca el modal
            setTimeout(() => {
                const ctx = document.getElementById('detailedTimeChart').getContext('2d');
                new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: ['Lun', 'Mar', 'Mié', 'Jue', 'Vie', 'Sáb', 'Dom'],
                        datasets: [{
                            label: 'Minutos',
                            data: [3.8, 4.2, 3.9, 3.5, 3.7, 3.2, 3.5],
                            backgroundColor: 'rgba(59, 130, 246, 0.2)',
                            borderColor: 'rgba(59, 130, 246, 1)',
                            borderWidth: 2,
                            tension: 0.3,
                            fill: true
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                display: false
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            }, 100);
        } else if (metricType === 'categorias-principales') {
            title.textContent = 'Detalle de Categorías Principales';
            content.innerHTML = `
                <div class="space-y-3">
                    <div class="p-3 rounded-md bg-blue-50">
                        <div class="flex justify-between items-center">
                            <div class="font-medium">Producto</div>
                            <div class="font-bold">45%</div>
                        </div>
                        <div class="w-full bg-gray-200 h-3 rounded-full mt-1">
                            <div class="bg-blue-500 h-full rounded-full" style="width: 45%"></div>
                        </div>
                    </div>
                    
                    <div class="p-3 rounded-md bg-green-50">
                        <div class="flex justify-between items-center">
                            <div class="font-medium">Servicio</div>
                            <div class="font-bold">30%</div>
                        </div>
                        <div class="w-full bg-gray-200 h-3 rounded-full mt-1">
                            <div class="bg-green-500 h-full rounded-full" style="width: 30%"></div>
                        </div>
                    </div>
                    
                    <div class="p-3 rounded-md bg-purple-50">
                        <div class="flex justify-between items-center">
                            <div class="font-medium">Soporte</div>
                            <div class="font-bold">25%</div>
                        </div>
                        <div class="w-full bg-gray-200 h-3 rounded-full mt-1">
                            <div class="bg-purple-500 h-full rounded-full" style="width: 25%"></div>
                        </div>
                    </div>
                </div>
                
                <div class="mt-4">
                    <div class="text-sm font-medium mb-2">Tendencia por categoría (últimos 3 meses)</div>
                    <canvas id="categoryTrendChart" height="150"></canvas>
                </div>
            `;
            
            // Inicializar gráfico de tendencia de categorías
            setTimeout(() => {
                const ctx = document.getElementById('categoryTrendChart').getContext('2d');
                new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: ['Abr', 'May', 'Jun'],
                        datasets: [
                            {
                                label: 'Producto',
                                data: [35, 40, 45],
                                borderColor: 'rgba(59, 130, 246, 1)',
                                backgroundColor: 'rgba(59, 130, 246, 0.1)',
                                tension: 0.3
                            },
                            {
                                label: 'Servicio',
                                data: [25, 28, 30],
                                borderColor: 'rgba(16, 185, 129, 1)',
                                backgroundColor: 'rgba(16, 185, 129, 0.1)',
                                tension: 0.3
                            },
                            {
                                label: 'Soporte',
                                data: [40, 32, 25],
                                borderColor: 'rgba(139, 92, 246, 1)',
                                backgroundColor: 'rgba(139, 92, 246, 0.1)',
                                tension: 0.3
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'bottom'
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                max: 50
                            }
                        }
                    }
                });
            }, 100);
        }
        
        // Mostrar el modal
        modal.classList.remove('hidden');
    }
    
    function closeDetailedMetric() {
        const modal = document.getElementById('detailedMetricModal');
        modal.classList.add('hidden');
    }
    
    function showExportModal() {
        const modal = document.getElementById('exportModal');
        modal.classList.remove('hidden');
    }
    
    function closeExportModal() {
        const modal = document.getElementById('exportModal');
        modal.classList.add('hidden');
    }
    
    function performExport() {
        // Obtener opciones seleccionadas
        const includeCharts = document.getElementById('includeCharts').checked;
        
        // Simular exportación
        showToast(`Datos exportados correctamente${includeCharts ? ' con gráficos' : ''}`, 'success');
        closeExportModal();
    }
    
    function updateDataByTimeRange(months) {
        // Simular actualización de datos según el rango de tiempo seleccionado
        let responseValues = [];
        let categoryValues = [];
        
        // Generar datos ficticios según el rango seleccionado
        if (months === 3) {
            responseValues = [4.2, 3.8, 5.1, 4.5, 3.2, 2.9, 3.5];
            categoryValues = [45, 25, 15, 10, 5];
        } else if (months === 6) {
            responseValues = [3.9, 4.2, 4.8, 3.6, 3.0, 3.5, 4.1];
            categoryValues = [40, 30, 15, 8, 7];
        } else if (months === 12) {
            responseValues = [4.5, 4.0, 4.2, 3.8, 3.5, 3.2, 3.7];
            categoryValues = [35, 30, 20, 10, 5];
        }
        
        // Actualizar datos de los gráficos
        responseTimesChart.data.datasets[0].data = responseValues;
        responseTimesChart.update();
        
        categoryDistributionChart.data.datasets[0].data = categoryValues;
        categoryDistributionChart.update();
        
        // Actualizar contenido del tabpanel mensual
        updateMonthlyBreakdown(months);
        
        showToast(`Datos actualizados para los últimos ${months} meses`, 'info');
    }
    
    function updateMonthlyBreakdown(months) {
        // Actualizar contenido del panel mensual según el rango de tiempo
        const monthlyTab = document.getElementById('monthlyTab');
        let monthlyContent = '<div class="space-y-6 mt-4">';
        
        // Función auxiliar para obtener nombre de mes basado en índice (0-11)
        const getMonthName = (monthIndex) => {
            const monthNames = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 
                              'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];
            return monthNames[monthIndex];
        };
        
        // Fecha actual para calcular meses
        const now = new Date();
        
        // Generar datos para cada mes en el rango
        for (let i = 0; i < months; i++) {
            const monthDate = new Date(now.getFullYear(), now.getMonth() - i, 1);
            const monthName = getMonthName(monthDate.getMonth());
            const year = monthDate.getFullYear();
            
            // Generar datos simulados
            const totalSuggestions = Math.floor(Math.random() * 50) + 80;
            const implementationRate = Math.floor(Math.random() * 20) + 65;
            
            monthlyContent += `
                <div class="border rounded-lg p-4">
                    <h3 class="text-lg font-medium flex items-center gap-2">
                        <i class="fas fa-calendar"></i>
                        ${monthName} ${year}
                    </h3>
                    
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mt-4">
                        <div class="bg-gray-100 rounded-md p-3">
                            <p class="text-sm text-gray-600">Total Sugerencias</p>
                            <p class="text-2xl font-bold">${totalSuggestions}</p>
                        </div>
                        
                        <div class="bg-gray-100 rounded-md p-3">
                            <p class="text-sm text-gray-600">Tasa de Implementación</p>
                            <p class="text-2xl font-bold">${implementationRate}%</p>
                        </div>
                        
                        <div class="bg-gray-100 rounded-md p-3">
                            <p class="text-sm text-gray-600">Categorías Principales</p>
                            <div class="flex flex-wrap gap-1 mt-1">
                                <span class="bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded">Producto (${Math.floor(totalSuggestions * 0.4)})</span>
                                <span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded">UX (${Math.floor(totalSuggestions * 0.25)})</span>
                            </div>
                        </div>
                    </div>
                </div>
            `;
        }
        
        monthlyContent += '</div>';
        monthlyTab.innerHTML = monthlyContent;
    }
    
    function refreshData() {
        // Simular actualización de datos con valores aleatorios
        const responseValues = [
            Math.random() * 2 + 3,
            Math.random() * 2 + 3,
            Math.random() * 2 + 3,
            Math.random() * 2 + 3,
            Math.random() * 2 + 3,
            Math.random() * 2 + 3,
            Math.random() * 2 + 3
        ];
        
        // Actualizar datos del gráfico principal
        responseTimesChart.data.datasets[0].data = responseValues;
        responseTimesChart.update();
        
        // Actualizar distribución de categorías
        const categoryValues = [
            Math.floor(Math.random() * 10) + 40, // Producto
            Math.floor(Math.random() * 10) + 20, // UX/UI
            Math.floor(Math.random() * 10) + 10, // Soporte
            Math.floor(Math.random() * 5) + 5,   // Funcionalidad
            Math.floor(Math.random() * 5) + 3    // Otro
        ];
        
        categoryDistributionChart.data.datasets[0].data = categoryValues;
        categoryDistributionChart.update();
        
        // Mostrar notificación toast
        showToast('Datos actualizados correctamente', 'success');
    }
    
    function viewAllAnalytics() {
        // Redirigir a la página completa de análisis
        window.location.href = '@Url.Action("Index", "Analytics")';
    }
    
    function showToast(message, type = 'info') {
        const toastContainer = document.getElementById('toastContainer');
        
        // Crear el elemento toast
        const toast = document.createElement('div');
        toast.className = `flex items-center p-3 mb-3 rounded-md shadow-lg animate-fade-in ${
            type === 'success' ? 'bg-green-50 border-l-4 border-green-500 text-green-700' :
            type === 'error' ? 'bg-red-50 border-l-4 border-red-500 text-red-700' :
            'bg-blue-50 border-l-4 border-blue-500 text-blue-700'
        }`;
        
        // Añadir icono
        const icon = document.createElement('span');
        icon.className = 'mr-2';
        icon.innerHTML = type === 'success' ? '<i class="fas fa-check-circle"></i>' :
                         type === 'error' ? '<i class="fas fa-exclamation-circle"></i>' :
                         '<i class="fas fa-info-circle"></i>';
        
        // Añadir mensaje
        const text = document.createElement('span');
        text.textContent = message;
        
        // Añadir botón de cierre
        const closeBtn = document.createElement('button');
        closeBtn.className = 'ml-auto text-gray-400 hover:text-gray-600';
        closeBtn.innerHTML = '<i class="fas fa-times"></i>';
        closeBtn.onclick = function() {
            toast.classList.add('animate-fade-out');
            setTimeout(() => {
                toastContainer.removeChild(toast);
            }, 300);
        };
        
        // Ensamblar el toast
        toast.appendChild(icon);
        toast.appendChild(text);
        toast.appendChild(closeBtn);
        
        // Añadir al contenedor
        toastContainer.appendChild(toast);
        
        // Auto-ocultar después de 5 segundos
        setTimeout(() => {
            if (toastContainer.contains(toast)) {
                toast.classList.add('animate-fade-out');
                setTimeout(() => {
                    if (toastContainer.contains(toast)) {
                        toastContainer.removeChild(toast);
                    }
                }, 300);
            }
        }, 5000);
    }
</script>

<style>
    .animate-fade-in {
        animation: fadeIn 0.3s ease-in-out;
    }
    
    .animate-fade-out {
        animation: fadeOut 0.3s ease-in-out;
    }
    
    .animate-scale-in {
        animation: scaleIn 0.3s ease-in-out;
    }
    
    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(-10px); }
        to { opacity: 1; transform: translateY(0); }
    }
    
    @keyframes fadeOut {
        from { opacity: 1; transform: translateY(0); }
        to { opacity: 0; transform: translateY(-10px); }
    }
    
    @keyframes scaleIn {
        from { transform: scale(0.95); opacity: 0; }
        to { transform: scale(1); opacity: 1; }
    }
    
    #detailedMetricModal, #exportModal {
        backdrop-filter: blur(3px);
    }
    
    .tab-button.active {
        border-bottom-width: 2px;
    }
    
    .tab-content {
        display: none;
    }
    
    .tab-content.active {
        display: block;
    }
</style>
