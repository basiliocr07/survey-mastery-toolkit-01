
@model CustomerGrowthViewModel
@{
    ViewData["Title"] = "Customer Growth Tracking";
}

<div class="w-full px-4 sm:px-6 lg:px-8 pt-24 pb-20">
    <div class="w-full max-w-[900px] mx-auto bg-white p-6">
        <div class="flex justify-between items-center mb-8">
            <div>
                <h1 class="text-3xl font-bold tracking-tight sm:text-4xl mb-2">Customer Growth Tracking</h1>
                <p class="text-muted-foreground">
                    Track and manage your customers and their growth metrics
                </p>
            </div>
            
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createCustomerModal">
                <i class="fas fa-plus mr-2"></i>Add Customer
            </button>
        </div>
        
        <div class="grid grid-cols-1 gap-8">
            <!-- Service Usage Chart -->
            <div class="card p-6">
                <h2 class="text-xl font-bold mb-4">Service Usage</h2>
                <div class="w-full h-[300px]" id="serviceUsageChart">
                    <!-- Chart will be rendered here -->
                </div>
            </div>
            
            <!-- Customers Table -->
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-border">
                    <thead class="bg-accent/50">
                        <tr>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider">Brand</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider">Contact</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider">Services</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider">Growth</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider">Actions</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        @if (Model.Customers != null && Model.Customers.Any())
                        {
                            @foreach (var customer in Model.Customers)
                            {
                                <tr class="hover:bg-accent/10 transition-colors">
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="text-sm font-medium">@customer.BrandName</div>
                                        <div class="text-xs text-muted-foreground">Since @customer.CreatedAt.ToShortDateString()</div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="text-sm">@customer.ContactEmail</div>
                                        <div class="text-xs text-muted-foreground">@customer.ContactPhone</div>
                                    </td>
                                    <td class="px-6 py-4">
                                        <div class="flex flex-wrap gap-1">
                                            @foreach (var service in customer.AcquiredServices)
                                            {
                                                <span class="inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-primary/10 text-primary">
                                                    @service
                                                </span>
                                            }
                                        </div>
                                    </td>
                                    <td class="px-6 py-4">
                                        <div class="flex items-center">
                                            @if (customer.GrowthMetrics != null && customer.GrowthMetrics.Any())
                                            {
                                                var lastMetric = customer.GrowthMetrics.OrderByDescending(m => m.Period).FirstOrDefault();
                                                if (lastMetric != null)
                                                {
                                                    <span class="inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                                                        <i class="fas fa-arrow-up mr-1"></i>@lastMetric.Revenue.ToString("C0")
                                                    </span>
                                                }
                                            }
                                            else
                                            {
                                                <span class="text-xs text-muted-foreground">No data</span>
                                            }
                                        </div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                        <a href="@Url.Action("Edit", new { id = customer.Id })" class="text-primary hover:text-primary/80 mr-3">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <a href="#" data-customer-id="@customer.Id" class="view-details text-primary hover:text-primary/80">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="5" class="px-6 py-10 text-center text-sm text-muted-foreground">
                                    <p>No customers found. Add your first customer to get started.</p>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Create Customer Modal -->
<div class="modal fade" id="createCustomerModal" tabindex="-1" aria-labelledby="createCustomerModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createCustomerModalLabel">Add New Customer</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="Create" method="post">
                <div class="modal-body">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="BrandName" class="form-label">Brand Name</label>
                            <input type="text" id="BrandName" name="BrandName" class="form-control" required />
                        </div>
                        <div class="col-md-6">
                            <label for="ContactEmail" class="form-label">Contact Email</label>
                            <input type="email" id="ContactEmail" name="ContactEmail" class="form-control" required />
                        </div>
                    </div>
                    
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="ContactPhone" class="form-label">Contact Phone</label>
                            <input type="tel" id="ContactPhone" name="ContactPhone" class="form-control" required />
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label class="form-label">Acquired Services</label>
                        <div class="row">
                            @foreach (var service in Model.AvailableServices)
                            {
                                <div class="col-md-3 mb-2">
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" 
                                               id="service-@service.Replace(" ", "-").ToLower()" 
                                               name="SelectedServices" 
                                               value="@service">
                                        <label class="form-check-label" for="service-@service.Replace(" ", "-").ToLower()">
                                            @service
                                        </label>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Add Customer</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Customer Details Modal -->
<div class="modal fade" id="customerDetailsModal" tabindex="-1" aria-labelledby="customerDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="customerDetailsModalLabel">Customer Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="customerDetailsContent">
                <!-- Will be filled via AJAX -->
                <div class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.9.1/dist/chart.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Prepare service usage data for the chart
            const serviceUsageData = @Html.Raw(Json.Serialize(Model.ServiceUsageData));
            
            // Create the service usage chart
            const ctx = document.getElementById('serviceUsageChart').getContext('2d');
            
            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: serviceUsageData.map(item => item.name),
                    datasets: [{
                        label: 'Number of Customers',
                        data: serviceUsageData.map(item => item.count),
                        backgroundColor: '#8884d8',
                        borderColor: '#7c6bc4',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                precision: 0
                            }
                        }
                    }
                }
            });
            
            // Handle viewing customer details
            document.querySelectorAll('.view-details').forEach(button => {
                button.addEventListener('click', function(e) {
                    e.preventDefault();
                    const customerId = this.getAttribute('data-customer-id');
                    
                    // Here you would typically load customer details via AJAX
                    // For now, we'll just show the modal with placeholder content
                    const customerData = @Html.Raw(Json.Serialize(Model.Customers));
                    const customer = customerData.find(c => c.id === customerId);
                    
                    if (customer) {
                        let detailsHtml = `
                            <div class="mb-4">
                                <h3 class="text-xl font-bold">${customer.brandName}</h3>
                                <p class="text-muted-foreground">Customer since ${new Date(customer.createdAt).toLocaleDateString()}</p>
                            </div>
                            <div class="grid md:grid-cols-2 gap-4 mb-4">
                                <div>
                                    <h4 class="font-semibold mb-2">Contact Information</h4>
                                    <p><strong>Email:</strong> ${customer.contactEmail}</p>
                                    <p><strong>Phone:</strong> ${customer.contactPhone}</p>
                                </div>
                                <div>
                                    <h4 class="font-semibold mb-2">Services</h4>
                                    <div class="flex flex-wrap gap-1">
                        `;
                        
                        customer.acquiredServices.forEach(service => {
                            detailsHtml += `<span class="inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-primary/10 text-primary">${service}</span>`;
                        });
                        
                        detailsHtml += `
                                    </div>
                                </div>
                            </div>
                        `;
                        
                        // Add growth metrics if available
                        if (customer.growthMetrics && customer.growthMetrics.length > 0) {
                            detailsHtml += `
                                <div>
                                    <h4 class="font-semibold mb-2">Growth Metrics</h4>
                                    <table class="min-w-full divide-y divide-gray-200">
                                        <thead>
                                            <tr>
                                                <th class="px-4 py-2 text-left">Period</th>
                                                <th class="px-4 py-2 text-left">Revenue</th>
                                                <th class="px-4 py-2 text-left">User Count</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                            `;
                            
                            customer.growthMetrics.forEach(metric => {
                                detailsHtml += `
                                    <tr>
                                        <td class="px-4 py-2">${metric.period}</td>
                                        <td class="px-4 py-2">$${metric.revenue.toLocaleString()}</td>
                                        <td class="px-4 py-2">${metric.userCount}</td>
                                    </tr>
                                `;
                            });
                            
                            detailsHtml += `
                                        </tbody>
                                    </table>
                                </div>
                            `;
                        } else {
                            detailsHtml += `<p class="text-muted-foreground">No growth metrics available for this customer.</p>`;
                        }
                        
                        document.getElementById('customerDetailsContent').innerHTML = detailsHtml;
                    } else {
                        document.getElementById('customerDetailsContent').innerHTML = `<p class="text-red-500">Customer not found</p>`;
                    }
                    
                    // Show the modal
                    const modal = new bootstrap.Modal(document.getElementById('customerDetailsModal'));
                    modal.show();
                });
            });
        });
    </script>
}
