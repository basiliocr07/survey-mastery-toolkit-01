
@model IEnumerable<SurveyApp.WebMvc.Models.CustomerViewModel>
@{
    ViewData["Title"] = "Customer Growth Tracking";
}

<div class="w-full px-4 sm:px-6 lg:px-8 pb-10">
    <div class="w-full max-w-[900px] mx-auto bg-white p-6">
        <div class="flex justify-between items-center mb-8">
            <div>
                <h1 class="text-3xl font-bold tracking-tight sm:text-4xl mb-2">Customer Growth Tracking</h1>
                <p class="text-muted-foreground">
                    Track and manage your customers and their growth metrics
                </p>
            </div>
            
            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#createCustomerModal">
                <i class="fas fa-plus mr-2"></i>Add Customer
            </button>
        </div>
        
        <div class="grid grid-cols-1 gap-8">
            <!-- Service Usage Chart -->
            <div class="card p-6">
                <h2 class="text-xl font-bold mb-4">Service Usage</h2>
                <div class="w-full h-[300px]" id="serviceUsageChart">
                    <!-- Chart will be rendered here -->
                    <div class="flex items-center justify-center h-full">
                        <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-primary"></div>
                    </div>
                </div>
            </div>
            
            <!-- Customers Table -->
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-border">
                    <thead class="bg-accent/50">
                        <tr>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider">Brand</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider">Contact</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider">Services</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider">Growth</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider">Actions</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        @if (Model != null && Model.Any())
                        {
                            @foreach (var customer in Model)
                            {
                                <tr class="hover:bg-accent/10 transition-colors">
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="text-sm font-medium">@customer.BrandName</div>
                                        <div class="text-xs text-muted-foreground">Since @customer.CreatedAt.ToShortDateString()</div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="text-sm">@customer.ContactEmail</div>
                                        <div class="text-xs text-muted-foreground">@customer.ContactPhone</div>
                                    </td>
                                    <td class="px-6 py-4">
                                        <div class="flex flex-wrap gap-1">
                                            @foreach (var service in customer.AcquiredServices)
                                            {
                                                <span class="inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-primary/10 text-primary">
                                                    @service
                                                </span>
                                            }
                                        </div>
                                    </td>
                                    <td class="px-6 py-4">
                                        <div class="flex items-center">
                                            @if (customer.GrowthMetrics != null && customer.GrowthMetrics.Any())
                                            {
                                                var lastMetric = customer.GrowthMetrics.OrderByDescending(m => m.Period).FirstOrDefault();
                                                if (lastMetric != null)
                                                {
                                                    <span class="inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                                                        <i class="fas fa-arrow-up mr-1"></i>@lastMetric.Revenue.ToString("C0")
                                                    </span>
                                                }
                                            }
                                            else
                                            {
                                                <span class="text-xs text-muted-foreground">No data</span>
                                            }
                                        </div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                        <a href="@Url.Action("Edit", new { id = customer.Id })" class="text-primary hover:text-primary/80 mr-3">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <a href="@Url.Action("Details", new { id = customer.Id })" class="text-primary hover:text-primary/80">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="5" class="px-6 py-10 text-center text-sm text-muted-foreground">
                                    <p>No customers found. Add your first customer to get started.</p>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Create Customer Modal -->
<div class="modal fade" id="createCustomerModal" tabindex="-1" role="dialog" aria-labelledby="createCustomerModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createCustomerModalLabel">Add New Customer</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form asp-action="Create" method="post">
                <div class="modal-body">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                        <div class="space-y-2">
                            <label for="BrandName" class="text-sm font-medium">Brand Name</label>
                            <input type="text" id="BrandName" name="BrandName" class="form-input w-full rounded-md border" required />
                        </div>
                        <div class="space-y-2">
                            <label for="ContactEmail" class="text-sm font-medium">Contact Email</label>
                            <input type="email" id="ContactEmail" name="ContactEmail" class="form-input w-full rounded-md border" required />
                        </div>
                    </div>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                        <div class="space-y-2">
                            <label for="ContactPhone" class="text-sm font-medium">Contact Phone</label>
                            <input type="tel" id="ContactPhone" name="ContactPhone" class="form-input w-full rounded-md border" />
                        </div>
                        <div class="space-y-2">
                            <label for="CreatedAt" class="text-sm font-medium">Customer Since</label>
                            <input type="date" id="CreatedAt" name="CreatedAt" class="form-input w-full rounded-md border" />
                        </div>
                    </div>
                    
                    <div class="mb-4">
                        <label class="text-sm font-medium mb-2 block">Acquired Services</label>
                        <div class="grid grid-cols-2 md:grid-cols-4 gap-2">
                            <div class="flex items-center">
                                <input type="checkbox" id="service-basic" name="AcquiredServices" value="Basic Survey" class="rounded border-gray-300 text-primary focus:ring-primary mr-2" />
                                <label for="service-basic">Basic Survey</label>
                            </div>
                            <div class="flex items-center">
                                <input type="checkbox" id="service-premium" name="AcquiredServices" value="Premium Survey" class="rounded border-gray-300 text-primary focus:ring-primary mr-2" />
                                <label for="service-premium">Premium Survey</label>
                            </div>
                            <div class="flex items-center">
                                <input type="checkbox" id="service-analytics" name="AcquiredServices" value="Analytics Dashboard" class="rounded border-gray-300 text-primary focus:ring-primary mr-2" />
                                <label for="service-analytics">Analytics Dashboard</label>
                            </div>
                            <div class="flex items-center">
                                <input type="checkbox" id="service-api" name="AcquiredServices" value="API Access" class="rounded border-gray-300 text-primary focus:ring-primary mr-2" />
                                <label for="service-api">API Access</label>
                            </div>
                            <div class="flex items-center">
                                <input type="checkbox" id="service-branding" name="AcquiredServices" value="Custom Branding" class="rounded border-gray-300 text-primary focus:ring-primary mr-2" />
                                <label for="service-branding">Custom Branding</label>
                            </div>
                            <div class="flex items-center">
                                <input type="checkbox" id="service-reports" name="AcquiredServices" value="Advanced Reports" class="rounded border-gray-300 text-primary focus:ring-primary mr-2" />
                                <label for="service-reports">Advanced Reports</label>
                            </div>
                        </div>
                    </div>
                    
                    <div class="border-t pt-4 mt-4">
                        <h3 class="text-lg font-medium mb-3">Initial Growth Metrics</h3>
                        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                            <div class="space-y-2">
                                <label for="GrowthPeriod" class="text-sm font-medium">Period</label>
                                <input type="text" id="GrowthPeriod" name="GrowthMetrics[0].Period" class="form-input w-full rounded-md border" placeholder="e.g. 2023-Q1" />
                            </div>
                            <div class="space-y-2">
                                <label for="GrowthRevenue" class="text-sm font-medium">Revenue</label>
                                <input type="number" step="0.01" id="GrowthRevenue" name="GrowthMetrics[0].Revenue" class="form-input w-full rounded-md border" placeholder="0.00" />
                            </div>
                            <div class="space-y-2">
                                <label for="GrowthUserCount" class="text-sm font-medium">User Count</label>
                                <input type="number" id="GrowthUserCount" name="GrowthMetrics[0].UserCount" class="form-input w-full rounded-md border" placeholder="0" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Add Customer</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.9.1/dist/chart.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Prepare service usage data
            const services = [
                'Basic Survey',
                'Premium Survey',
                'Analytics Dashboard',
                'API Access',
                'Custom Branding',
                'Advanced Reports',
                'Email Marketing',
                'Data Export'
            ];
            
            // Count service usage from customers
            const serviceCounts = new Map();
            services.forEach(service => serviceCounts.set(service, 0));
            
            @if (Model != null)
            {
                foreach (var customer in Model)
                {
                    foreach (var service in customer.AcquiredServices)
                    {
                        @:serviceCounts.set('@service', serviceCounts.get('@service') + 1);
                    }
                }
            }
            
            // Sort services by count
            const sortedServiceData = Array.from(serviceCounts.entries())
                .filter(([_, count]) => count > 0)
                .sort(([_, countA], [__, countB]) => countB - countA);
            
            // Create the chart
            const ctx = document.getElementById('serviceUsageChart').getContext('2d');
            document.getElementById('serviceUsageChart').innerHTML = '';
            
            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: sortedServiceData.map(([service]) => service),
                    datasets: [{
                        label: 'Customers',
                        data: sortedServiceData.map(([_, count]) => count),
                        backgroundColor: '#3b82f6',
                        borderColor: '#2563eb',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                precision: 0
                            }
                        }
                    }
                }
            });
        });
    </script>
}
