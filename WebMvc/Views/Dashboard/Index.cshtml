
@model SurveyApp.WebMvc.Models.DashboardViewModel
@{
    ViewData["Title"] = "Panel de Control";
}

<div class="container mx-auto px-4 py-8">
    <div class="flex justify-between items-center mb-6">
        <h1 class="text-3xl font-bold">Panel de Control</h1>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4" role="alert">
            <span class="block sm:inline">@TempData["SuccessMessage"]</span>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
            <span class="block sm:inline">@TempData["ErrorMessage"]</span>
        </div>
    }

    <div class="bg-white shadow-md rounded-lg overflow-hidden">
        <div class="px-6 py-4 border-b">
            <h2 class="text-xl font-semibold">Vista Rápida de Elementos Recientes</h2>
        </div>
        
        <div class="divide-y">
            <!-- Última Encuesta - Collapsible -->
            <div class="collapsible-container">
                <button class="w-full px-6 py-4 flex justify-between items-center hover:bg-gray-50 transition-colors" 
                        onclick="toggleCollapsible('survey-collapsible')">
                    <div>
                        <div class="flex items-center gap-2 mb-1">
                            <h3 class="font-medium">Encuestas</h3>
                            @if (Model.LatestSurvey != null)
                            {
                                <span class="status-badge @(Model.LatestSurvey.Status == "pending" ? "bg-amber-50 text-amber-700 border-amber-200" : 
                                                          Model.LatestSurvey.Status == "in-progress" ? "bg-blue-50 text-blue-700 border-blue-200" : 
                                                          "bg-green-50 text-green-700 border-green-200")">
                                    @(Model.LatestSurvey.Status == "pending" ? "Pendiente" : 
                                      Model.LatestSurvey.Status == "in-progress" ? "En curso" : "Cerrada")
                                </span>
                            }
                        </div>
                        @if (Model.LatestSurvey != null)
                        {
                            <p class="font-semibold">@Model.LatestSurvey.Title</p>
                            <p class="text-sm text-gray-600">
                                Creada el @Model.LatestSurvey.CreatedAt.ToString("dd/MM/yyyy") • @Model.LatestSurvey.ResponseCount respuestas
                            </p>
                        }
                        else
                        {
                            <p class="text-gray-500">No hay encuestas disponibles</p>
                        }
                    </div>
                    <i class="fas fa-chevron-down text-gray-400 transition-transform" id="survey-icon"></i>
                </button>
                
                <div class="collapsible-content hidden bg-gray-50 px-6 py-3" id="survey-collapsible">
                    <h4 class="text-sm font-medium mb-2">Últimas 5 respuestas</h4>
                    @if (Model.RecentSurveyResponses != null && Model.RecentSurveyResponses.Any())
                    {
                        <div class="space-y-2">
                            @foreach (var response in Model.RecentSurveyResponses)
                            {
                                <div class="bg-white p-3 rounded border text-sm">
                                    <div class="flex justify-between">
                                        <span class="font-medium">@response.RespondentName</span>
                                        <span class="text-gray-500 text-xs">@response.SubmittedAt.ToString("dd/MM/yyyy HH:mm")</span>
                                    </div>
                                    <p class="text-gray-600">@response.SurveyTitle</p>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-sm text-gray-500">No hay respuestas recientes</p>
                    }
                    <div class="mt-3 text-right">
                        <a asp-controller="Survey" asp-action="Index" class="text-sm text-blue-600 hover:underline">
                            Ver todas las encuestas <i class="fas fa-arrow-right ml-1"></i>
                        </a>
                    </div>
                </div>
            </div>
            
            <!-- Última Sugerencia - Collapsible -->
            <div class="collapsible-container">
                <button class="w-full px-6 py-4 flex justify-between items-center hover:bg-gray-50 transition-colors" 
                        onclick="toggleCollapsible('suggestion-collapsible')">
                    <div>
                        <div class="flex items-center gap-2 mb-1">
                            <h3 class="font-medium">Sugerencias</h3>
                            @if (Model.LatestSuggestion != null)
                            {
                                <span class="status-badge @(Model.LatestSuggestion.Status == "pending" ? "bg-amber-50 text-amber-700 border-amber-200" : 
                                                          Model.LatestSuggestion.Status == "in-progress" ? "bg-blue-50 text-blue-700 border-blue-200" : 
                                                          "bg-green-50 text-green-700 border-green-200")">
                                    @(Model.LatestSuggestion.Status == "pending" ? "Pendiente" : 
                                      Model.LatestSuggestion.Status == "in-progress" ? "En curso" : "Cerrada")
                                </span>
                            }
                        </div>
                        @if (Model.LatestSuggestion != null)
                        {
                            <p class="font-semibold">@Model.LatestSuggestion.Content</p>
                            <p class="text-sm text-gray-600">
                                De @Model.LatestSuggestion.CustomerName • @Model.LatestSuggestion.CreatedAt.ToString("dd/MM/yyyy")
                            </p>
                        }
                        else
                        {
                            <p class="text-gray-500">No hay sugerencias disponibles</p>
                        }
                    </div>
                    <i class="fas fa-chevron-down text-gray-400 transition-transform" id="suggestion-icon"></i>
                </button>
                
                <div class="collapsible-content hidden bg-gray-50 px-6 py-3" id="suggestion-collapsible">
                    <h4 class="text-sm font-medium mb-2">Últimas 5 sugerencias</h4>
                    @if (Model.RecentSuggestions != null && Model.RecentSuggestions.Any())
                    {
                        <div class="space-y-2">
                            @foreach (var suggestion in Model.RecentSuggestions)
                            {
                                <div class="bg-white p-3 rounded border text-sm">
                                    <div class="flex justify-between">
                                        <span class="font-medium">@suggestion.CustomerName</span>
                                        <span class="text-gray-500 text-xs">@suggestion.CreatedAt.ToString("dd/MM/yyyy")</span>
                                    </div>
                                    <p class="text-gray-600">@(suggestion.Content.Length > 60 ? suggestion.Content.Substring(0, 60) + "..." : suggestion.Content)</p>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-sm text-gray-500">No hay sugerencias recientes</p>
                    }
                    <div class="mt-3 text-right">
                        <a asp-controller="Suggestions" asp-action="Index" class="text-sm text-blue-600 hover:underline">
                            Ver todas las sugerencias <i class="fas fa-arrow-right ml-1"></i>
                        </a>
                    </div>
                </div>
            </div>
            
            <!-- Último Requerimiento - Collapsible -->
            <div class="collapsible-container">
                <button class="w-full px-6 py-4 flex justify-between items-center hover:bg-gray-50 transition-colors" 
                        onclick="toggleCollapsible('requirement-collapsible')">
                    <div>
                        <div class="flex items-center gap-2 mb-1">
                            <h3 class="font-medium">Requerimientos</h3>
                            @if (Model.LatestRequirement != null)
                            {
                                <span class="status-badge @(Model.LatestRequirement.Status == "pending" ? "bg-amber-50 text-amber-700 border-amber-200" : 
                                                          Model.LatestRequirement.Status == "in-progress" ? "bg-blue-50 text-blue-700 border-blue-200" : 
                                                          "bg-green-50 text-green-700 border-green-200")">
                                    @(Model.LatestRequirement.Status == "pending" ? "Pendiente" : 
                                      Model.LatestRequirement.Status == "in-progress" ? "En curso" : "Cerrada")
                                </span>
                            }
                        </div>
                        @if (Model.LatestRequirement != null)
                        {
                            <p class="font-semibold">@Model.LatestRequirement.Title</p>
                            <p class="text-sm text-gray-600">
                                Prioridad: 
                                @(Model.LatestRequirement.Priority == "high" ? "Alta" : 
                                Model.LatestRequirement.Priority == "medium" ? "Media" : "Baja") • 
                                @Model.LatestRequirement.CreatedAt.ToString("dd/MM/yyyy")
                            </p>
                        }
                        else
                        {
                            <p class="text-gray-500">No hay requerimientos disponibles</p>
                        }
                    </div>
                    <i class="fas fa-chevron-down text-gray-400 transition-transform" id="requirement-icon"></i>
                </button>
                
                <div class="collapsible-content hidden bg-gray-50 px-6 py-3" id="requirement-collapsible">
                    <h4 class="text-sm font-medium mb-2">Últimos 5 requerimientos</h4>
                    @if (Model.RecentRequirements != null && Model.RecentRequirements.Any())
                    {
                        <div class="space-y-2">
                            @foreach (var requirement in Model.RecentRequirements)
                            {
                                <div class="bg-white p-3 rounded border text-sm">
                                    <div class="flex justify-between">
                                        <span class="font-medium">@requirement.Title</span>
                                        <span class="text-xs px-2 py-0.5 rounded-full
                                            @(requirement.Priority == "high" ? "bg-red-50 text-red-700 border border-red-200" : 
                                              requirement.Priority == "medium" ? "bg-amber-50 text-amber-700 border border-amber-200" :
                                              "bg-green-50 text-green-700 border border-green-200")">
                                            @(requirement.Priority == "high" ? "Alta" : 
                                              requirement.Priority == "medium" ? "Media" : "Baja")
                                        </span>
                                    </div>
                                    <p class="text-gray-600">@(requirement.Description != null && requirement.Description.Length > 60 ? requirement.Description.Substring(0, 60) + "..." : requirement.Description)</p>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-sm text-gray-500">No hay requerimientos recientes</p>
                    }
                    <div class="mt-3 text-right">
                        <a asp-controller="Requirements" asp-action="ViewRequirements" class="text-sm text-blue-600 hover:underline">
                            Ver todos los requerimientos <i class="fas fa-arrow-right ml-1"></i>
                        </a>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="px-6 py-4 bg-gray-50">
            <div class="flex justify-end space-x-3">
                <a asp-controller="Analytics" asp-action="Index" class="btn btn-primary btn-sm">
                    <i class="fas fa-chart-bar mr-2"></i> Ver Análisis
                </a>
                <a asp-controller="Survey" asp-action="Index" class="btn btn-outline btn-sm">
                    Ver Todas las Encuestas
                    <i class="fas fa-arrow-right ml-2"></i>
                </a>
            </div>
        </div>
    </div>
</div>

<style>
    .status-badge {
        display: inline-flex;
        align-items: center;
        border-width: 1px;
        border-style: solid;
        padding: 0 0.5rem;
        border-radius: 999px;
        font-size: 0.75rem;
        font-weight: 500;
    }
    
    .dropdown-form {
        display: block;
        width: 100%;
    }
    
    .dropdown-item {
        display: flex;
        align-items: center;
        padding: 0.5rem 1rem;
        font-size: 0.875rem;
    }
    
    .dropdown-item.disabled {
        opacity: 0.5;
        pointer-events: none;
    }
    
    .btn-icon {
        width: 2rem;
        height: 2rem;
        padding: 0;
        display: inline-flex;
        align-items: center;
        justify-content: center;
    }
    
    .collapsible-container {
        position: relative;
    }
    
    .collapsible-content {
        max-height: 0;
        overflow: hidden;
        transition: max-height 0.3s ease-out;
    }
    
    .collapsible-content.show {
        max-height: 500px;
    }
</style>

@section Scripts {
    <script>
        // Initialization for Bootstrap dropdowns
        document.addEventListener('DOMContentLoaded', function() {
            var dropdownElementList = [].slice.call(document.querySelectorAll('.dropdown-toggle'));
            dropdownElementList.map(function(dropdownToggleEl) {
                return new bootstrap.Dropdown(dropdownToggleEl);
            });
        });
        
        // Toggle collapsible sections
        function toggleCollapsible(id) {
            const content = document.getElementById(id);
            const icon = document.getElementById(id.replace('collapsible', 'icon'));
            
            if (content.classList.contains('hidden')) {
                content.classList.remove('hidden');
                setTimeout(() => {
                    content.classList.add('show');
                }, 10);
                icon.style.transform = 'rotate(180deg)';
            } else {
                content.classList.remove('show');
                setTimeout(() => {
                    content.classList.add('hidden');
                }, 300);
                icon.style.transform = 'rotate(0)';
            }
        }
    </script>
}
