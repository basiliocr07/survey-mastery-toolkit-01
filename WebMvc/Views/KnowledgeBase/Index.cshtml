
@model IEnumerable<SurveyApp.Application.DTOs.KnowledgeBaseItemDto>
@{
    ViewData["Title"] = "Knowledge Base";
}

<div class="w-full px-4 sm:px-6 lg:px-8 pb-10">
    <div class="w-full max-w-[900px] mx-auto bg-white p-6">
        <div class="flex justify-between items-center mb-8">
            <div>
                <h1 class="text-3xl font-bold tracking-tight sm:text-4xl mb-2">Knowledge Base</h1>
                <p class="text-muted-foreground">
                    Access product documentation, guides, and best practices
                </p>
            </div>
            
            <div class="flex space-x-2">
                <a asp-controller="Requirements" asp-action="Index" class="btn btn-outline btn-sm">
                    <i class="fas fa-clipboard-list mr-2"></i>Requirements
                </a>
                <button type="button" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#addArticleModal">
                    <i class="fas fa-plus mr-2"></i>Add Article
                </button>
            </div>
        </div>
        
        <!-- Search and Category Filter -->
        <div class="flex flex-col sm:flex-row gap-4 mb-6">
            <div class="relative flex-grow">
                <input type="text" id="searchInput" placeholder="Search knowledge base..." class="form-input w-full pl-10 pr-4 py-2 rounded-md border" />
                <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <i class="fas fa-search text-muted-foreground"></i>
                </div>
            </div>
            
            <select id="categoryFilter" class="form-select rounded-md border">
                <option value="all">All Categories</option>
                <option value="getting-started">Getting Started</option>
                <option value="surveys">Surveys</option>
                <option value="analytics">Analytics</option>
                <option value="integrations">Integrations</option>
                <option value="troubleshooting">Troubleshooting</option>
            </select>
        </div>
        
        <!-- Articles Grid -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
            @if (Model != null && Model.Any())
            {
                foreach (var article in Model)
                {
                    <div class="article-item group card hover:border-primary/20 hover:bg-accent/30 transition-all duration-300" data-category="@article.Category.ToLower().Replace(" ", "-")">
                        <div class="p-6">
                            <div class="flex items-start justify-between mb-3">
                                <div class="p-2 rounded-lg bg-primary/10 text-primary">
                                    <i class="fas fa-@(GetCategoryIcon(article.Category)) text-lg"></i>
                                </div>
                                <span class="text-xs bg-primary/10 text-primary px-2 py-1 rounded-full">@article.Category</span>
                            </div>
                            
                            <h3 class="text-lg font-semibold mb-2 group-hover:text-primary transition-colors">@article.Title</h3>
                            <p class="text-muted-foreground text-sm mb-4 line-clamp-2">@article.Summary</p>
                            
                            <div class="flex justify-between items-center">
                                <span class="text-xs text-muted-foreground">Updated: @article.UpdatedAt.ToShortDateString()</span>
                                <a href="@Url.Action("Details", new { id = article.Id })" class="text-primary text-sm font-medium hover:underline">
                                    Read More
                                </a>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="col-span-2 p-8 text-center">
                    <div class="rounded-full bg-primary/10 text-primary w-12 h-12 flex items-center justify-center mx-auto mb-4">
                        <i class="fas fa-book text-xl"></i>
                    </div>
                    <h3 class="text-lg font-medium mb-1">No articles yet</h3>
                    <p class="text-muted-foreground mb-4">Start adding articles to build your knowledge base</p>
                    <button type="button" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#addArticleModal">
                        <i class="fas fa-plus mr-2"></i>Add Article
                    </button>
                </div>
            }
        </div>
        
        <!-- Popular Articles -->
        <div class="card p-6">
            <h2 class="text-xl font-bold mb-4">Popular Articles</h2>
            <div class="divide-y">
                @if (Model != null && Model.Any())
                {
                    var popularArticles = Model.OrderByDescending(a => a.ViewCount).Take(5);
                    foreach (var article in popularArticles)
                    {
                        <div class="py-3 flex items-center justify-between">
                            <div class="flex items-center">
                                <div class="w-8 h-8 rounded-full bg-primary/10 flex items-center justify-center mr-3">
                                    <i class="fas fa-@(GetCategoryIcon(article.Category)) text-primary"></i>
                                </div>
                                <div>
                                    <h3 class="font-medium">@article.Title</h3>
                                    <p class="text-xs text-muted-foreground">@article.ViewCount views</p>
                                </div>
                            </div>
                            <a href="@Url.Action("Details", new { id = article.Id })" class="text-primary hover:text-primary/80">
                                <i class="fas fa-arrow-right"></i>
                            </a>
                        </div>
                    }
                }
                else
                {
                    <p class="text-center text-muted-foreground py-4">No popular articles yet</p>
                }
            </div>
        </div>
    </div>
</div>

<!-- Add Article Modal -->
<div class="modal fade" id="addArticleModal" tabindex="-1" role="dialog" aria-labelledby="addArticleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addArticleModalLabel">Add New Article</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form asp-action="Create" method="post">
                <div class="modal-body">
                    <div class="space-y-4">
                        <div class="space-y-2">
                            <label for="Title" class="text-sm font-medium">Title</label>
                            <input type="text" id="Title" name="Title" class="form-input w-full rounded-md border" required />
                        </div>
                        
                        <div class="space-y-2">
                            <label for="Category" class="text-sm font-medium">Category</label>
                            <select id="Category" name="Category" class="form-select w-full rounded-md border">
                                <option value="Getting Started">Getting Started</option>
                                <option value="Surveys">Surveys</option>
                                <option value="Analytics">Analytics</option>
                                <option value="Integrations">Integrations</option>
                                <option value="Troubleshooting">Troubleshooting</option>
                            </select>
                        </div>
                        
                        <div class="space-y-2">
                            <label for="Summary" class="text-sm font-medium">Summary</label>
                            <textarea id="Summary" name="Summary" rows="2" class="form-textarea w-full rounded-md border" required></textarea>
                        </div>
                        
                        <div class="space-y-2">
                            <label for="Content" class="text-sm font-medium">Content</label>
                            <textarea id="Content" name="Content" rows="10" class="form-textarea w-full rounded-md border" required></textarea>
                        </div>
                        
                        <div class="space-y-2">
                            <label for="Keywords" class="text-sm font-medium">Keywords (comma separated)</label>
                            <input type="text" id="Keywords" name="Keywords" class="form-input w-full rounded-md border" placeholder="e.g. surveys, reports, export" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Add Article</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Search functionality
        document.getElementById('searchInput').addEventListener('input', filterArticles);
        document.getElementById('categoryFilter').addEventListener('change', filterArticles);
        
        function filterArticles() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const category = document.getElementById('categoryFilter').value;
            const articles = document.querySelectorAll('.article-item');
            
            articles.forEach(article => {
                const title = article.querySelector('h3').innerText.toLowerCase();
                const summary = article.querySelector('p').innerText.toLowerCase();
                const articleCategory = article.dataset.category;
                
                const matchesSearch = title.includes(searchTerm) || summary.includes(searchTerm);
                const matchesCategory = category === 'all' || articleCategory === category;
                
                if (matchesSearch && matchesCategory) {
                    article.style.display = 'block';
                } else {
                    article.style.display = 'none';
                }
            });
        }
    </script>
}

@functions {
    public string GetCategoryIcon(string category)
    {
        return category.ToLower() switch
        {
            "getting started" => "rocket",
            "surveys" => "clipboard",
            "analytics" => "chart-bar",
            "integrations" => "plug",
            "troubleshooting" => "wrench",
            _ => "book"
        };
    }
}
