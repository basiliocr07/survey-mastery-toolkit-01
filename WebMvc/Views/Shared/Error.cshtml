
@model SurveyApp.WebMvc.Models.ErrorViewModel
@{
    ViewData["Title"] = "Error";
}

<div class="container py-8">
    <div class="bg-white shadow-md rounded-lg p-6">
        <h1 class="text-2xl font-bold text-red-600 mb-4">Error</h1>
        
        <div class="bg-red-50 border-l-4 border-red-500 p-4 mb-4">
            <p class="text-red-700">@(Model.Message ?? "Se ha producido un error al procesar su solicitud.")</p>
            
            @if (Model.IsDatabaseError)
            {
                <p class="mt-2 text-red-600 font-medium">Error de base de datos: Puede que la base de datos no esté inicializada correctamente.</p>
            }
            
            @if (!string.IsNullOrEmpty(Model.ErrorType))
            {
                <p class="mt-2 text-gray-700"><strong>Tipo de error:</strong> @Model.ErrorType</p>
            }
            
            @if (Model.StatusCode.HasValue)
            {
                <p class="mt-2 text-gray-700"><strong>Código de estado:</strong> @Model.StatusCode</p>
            }
        </div>
        
        @if (Model.ShowRequestId)
        {
            <div class="mb-4">
                <p class="text-gray-600 text-sm">
                    <strong>ID de solicitud:</strong> <code>@Model.RequestId</code>
                </p>
            </div>
        }

        @if (!string.IsNullOrEmpty(Model.ControllerName) && !string.IsNullOrEmpty(Model.ActionName))
        {
            <div class="mt-2 text-sm text-gray-600">
                <p><strong>Controlador:</strong> @Model.ControllerName</p>
                <p><strong>Acción:</strong> @Model.ActionName</p>
                <p><strong>Método HTTP:</strong> @Model.HttpMethod</p>
                @if (!string.IsNullOrEmpty(Model.QueryString))
                {
                    <p><strong>Query String:</strong> @Model.QueryString</p>
                }
            </div>
        }
        
        @if (Model.ValidationErrors != null && Model.ValidationErrors.Count > 0)
        {
            <div class="mt-4 bg-yellow-50 p-4 rounded border border-yellow-200">
                <h3 class="font-medium text-yellow-800 mb-2">Errores de validación:</h3>
                <ul class="list-disc pl-5 text-sm">
                    @foreach (var error in Model.ValidationErrors)
                    {
                        <li class="mb-2">
                            <strong>@error.Key:</strong>
                            <ul class="list-disc pl-5 mt-1">
                                @foreach (var message in error.Value)
                                {
                                    <li>@message</li>
                                }
                            </ul>
                        </li>
                    }
                </ul>
            </div>
        }
        
        @if (!string.IsNullOrEmpty(Model.FormDataSummary))
        {
            <div class="mt-4 bg-blue-50 p-4 rounded border border-blue-200">
                <h3 class="font-medium text-blue-800 mb-2">Resumen de datos del formulario:</h3>
                <pre class="text-xs text-gray-600 whitespace-pre-wrap overflow-x-auto">@Model.FormDataSummary</pre>
            </div>
        }
        
        @if (!string.IsNullOrEmpty(Model.RequestBody))
        {
            <div class="mt-4 bg-blue-50 p-4 rounded border border-blue-200">
                <h3 class="font-medium text-blue-800 mb-2">Contenido de la solicitud:</h3>
                <pre class="text-xs text-gray-600 whitespace-pre-wrap overflow-x-auto">@Model.RequestBody</pre>
            </div>
        }

        @if (Model.Exception != null)
        {
            <div class="mt-4 bg-gray-50 p-4 rounded border border-gray-200">
                <h3 class="font-medium text-gray-700 mb-2">Detalles del error:</h3>
                <div class="overflow-x-auto">
                    <pre class="text-xs text-gray-600 whitespace-pre-wrap">@Model.Exception.Message</pre>
                </div>
                
                @if (!string.IsNullOrEmpty(Model.StackTrace))
                {
                    <h4 class="font-medium text-gray-700 mt-2 mb-1">Stack Trace:</h4>
                    <div class="overflow-x-auto max-h-64 overflow-y-auto">
                        <pre class="text-xs text-gray-600 whitespace-pre-wrap">@Model.StackTrace</pre>
                    </div>
                }
                
                @if (Model.Exception.InnerException != null)
                {
                    <h4 class="font-medium text-gray-700 mt-2 mb-1">Error interno:</h4>
                    <pre class="text-xs text-gray-600 whitespace-pre-wrap">@Model.Exception.InnerException.ToString()</pre>
                }
            </div>
            
            @if (Model.ErrorSource != null)
            {
                <div class="mt-2 text-sm text-gray-600">
                    <p>Origen del error: @Model.ErrorSource</p>
                    <p>Fecha y hora: @Model.ErrorTimestamp.ToString("yyyy-MM-dd HH:mm:ss")</p>
                </div>
            }
        }
        
        <div class="mt-6">
            <a href="@Url.Action("Index", "Home")" class="inline-flex items-center px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600">
                <svg class="w-4 h-4 mr-2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M9.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L7.414 9H15a1 1 0 110 2H7.414l2.293 2.293a1 1 0 010 1.414z" clip-rule="evenodd" />
                </svg>
                Volver a la página de inicio
            </a>
            
            <button 
                onclick="history.back()" 
                class="ml-2 inline-flex items-center px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300">
                Volver atrás
            </button>
            
            <button 
                onclick="location.reload()" 
                class="ml-2 inline-flex items-center px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300">
                Reintentar
            </button>
        </div>
    </div>
    
    @if (Model.IsAuthenticated)
    {
        <div class="mt-4 text-gray-600 text-sm">
            <p>Usuario: @Model.Username (@Model.UserRole)</p>
        </div>
    }

    @if (!string.IsNullOrEmpty(Model.LogReference))
    {
        <div class="mt-2 text-gray-500 text-xs">
            <p>Referencia de log: @Model.LogReference</p>
        </div>
    }
    
    @if (!string.IsNullOrEmpty(Model.DatabaseConnectionInfo))
    {
        <div class="mt-2 p-2 bg-yellow-50 border border-yellow-200 rounded text-xs">
            <p class="text-yellow-800">Información de conexión: @Model.DatabaseConnectionInfo</p>
        </div>
    }
    
    <div class="mt-4 p-4 bg-blue-50 border border-blue-200 rounded">
        <h3 class="text-blue-800 font-medium mb-2">Soluciones comunes:</h3>
        <ul class="list-disc list-inside text-sm text-blue-700">
            <li>Verifique que la base de datos está correctamente configurada.</li>
            <li>Asegúrese de que las migraciones se han ejecutado correctamente.</li>
            <li>Compruebe la cadena de conexión en el archivo appsettings.json.</li>
            <li>Si es un error de primera ejecución, intente reiniciar la aplicación.</li>
            <li>Revise los logs para obtener más detalles sobre el error.</li>
            <li>Asegúrese de que todos los campos requeridos del formulario están completos.</li>
            <li>Verifique que los datos del formulario tienen el formato correcto.</li>
            <li>En caso de problemas de conexión, verifique su red o VPN.</li>
        </ul>
    </div>
</div>

