
@model SurveyApp.WebMvc.Models.SurveyViewModel

<div class="min-h-screen bg-gray-50">
    <header class="bg-white shadow-sm">
        <div class="container mx-auto px-4 py-4 flex justify-between items-center">
            <div>
                <h1 class="text-xl font-semibold text-gray-800">Acceso Cliente</h1>
            </div>
            <nav>
                <ul class="flex space-x-4">
                    <li><a href="#" class="text-blue-600 hover:text-blue-800">Inicio</a></li>
                    <li><a href="#" class="text-gray-600 hover:text-gray-800">Ayuda</a></li>
                </ul>
            </nav>
        </div>
    </header>

    <main class="container mx-auto px-4 py-8">
        <div class="max-w-3xl mx-auto bg-white shadow rounded-lg p-6">
            <div class="mb-6">
                <h2 class="text-2xl font-bold mb-2">@Model.Title</h2>
                <p class="text-gray-600">@Model.Description</p>
            </div>
            
            <form id="surveyForm" method="post">
                <input type="hidden" name="SurveyId" value="@Model.Id" />
                
                <div class="space-y-6 mb-8">
                    @foreach (var question in Model.Questions)
                    {
                        <div class="bg-gray-50 p-4 rounded-md">
                            <div class="mb-2">
                                <label class="block text-sm font-medium text-gray-700">
                                    @question.Title
                                    @if (question.Required)
                                    {
                                        <span class="text-red-500">*</span>
                                    }
                                </label>
                                @if (!string.IsNullOrEmpty(question.Description))
                                {
                                    <p class="text-sm text-gray-500">@question.Description</p>
                                }
                            </div>
                            
                            @switch (question.Type)
                            {
                                case "Text":
                                    <input type="text" 
                                           name="Answers[@question.Id]" 
                                           class="w-full px-3 py-2 border border-gray-300 rounded-md"
                                           @(question.Required ? "required" : "") />
                                    break;
                                    
                                case "SingleChoice":
                                    <div class="space-y-2">
                                        @foreach (var option in question.Options)
                                        {
                                            <div class="flex items-center">
                                                <input type="radio" 
                                                       id="@($"option_{question.Id}_{option}")" 
                                                       name="Answers[@question.Id]" 
                                                       value="@option"
                                                       class="mr-2"
                                                       @(question.Required ? "required" : "") />
                                                <label for="@($"option_{question.Id}_{option}")">@option</label>
                                            </div>
                                        }
                                    </div>
                                    break;
                                    
                                case "MultipleChoice":
                                    <div class="space-y-2">
                                        @foreach (var option in question.Options)
                                        {
                                            <div class="flex items-center">
                                                <input type="checkbox" 
                                                       id="@($"option_{question.Id}_{option}")" 
                                                       name="Answers[@question.Id][]" 
                                                       value="@option"
                                                       class="mr-2" />
                                                <label for="@($"option_{question.Id}_{option}")">@option</label>
                                            </div>
                                        }
                                    </div>
                                    break;
                                    
                                case "Rating":
                                    <div class="flex space-x-4">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            <div class="text-center">
                                                <input type="radio" 
                                                       id="@($"rating_{question.Id}_{i}")" 
                                                       name="Answers[@question.Id]" 
                                                       value="@i"
                                                       class="mb-1"
                                                       @(question.Required ? "required" : "") />
                                                <label for="@($"rating_{question.Id}_{i}")">@i</label>
                                            </div>
                                        }
                                    </div>
                                    break;
                            }
                        </div>
                    }
                </div>
                
                <div class="flex justify-between items-center">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">Su nombre (opcional)</label>
                        <input type="text" name="RespondentName" class="px-3 py-1 border border-gray-300 rounded-md" />
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">Su email (opcional)</label>
                        <input type="email" name="RespondentEmail" class="px-3 py-1 border border-gray-300 rounded-md" />
                    </div>
                </div>
                
                <div class="mt-6">
                    <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700">
                        Enviar Respuestas
                    </button>
                </div>
            </form>
        </div>
    </main>
    
    <footer class="bg-white border-t mt-8 py-4">
        <div class="container mx-auto px-4 text-center text-gray-500 text-sm">
            <p>&copy; @DateTime.Now.Year - Sistema de Encuestas. Todos los derechos reservados.</p>
        </div>
    </footer>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('surveyForm');
            
            form.addEventListener('submit', async function(e) {
                e.preventDefault();
                
                const formData = new FormData(form);
                const surveyId = formData.get('SurveyId');
                
                // Preparar los datos para enviar
                const data = {
                    surveyId: surveyId,
                    respondentName: formData.get('RespondentName') || '',
                    respondentEmail: formData.get('RespondentEmail') || '',
                    answers: {}
                };
                
                // Procesar las respuestas
                const answers = {};
                
                // Iterar sobre los elementos del formulario
                formData.forEach((value, key) => {
                    if (key.startsWith('Answers[') && key.endsWith(']')) {
                        // Extraer el ID de la pregunta
                        const questionId = key.substring(8, key.length - 1);
                        answers[questionId] = value;
                    }
                    else if (key.startsWith('Answers[') && key.endsWith('][]')) {
                        // Manejo de preguntas de opción múltiple
                        const questionId = key.substring(8, key.length - 3);
                        
                        if (!answers[questionId]) {
                            answers[questionId] = [];
                        }
                        
                        if (Array.isArray(answers[questionId])) {
                            answers[questionId].push(value);
                        }
                    }
                });
                
                data.answers = answers;
                
                try {
                    const response = await fetch(`/api/surveys/client/${surveyId}/submit`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(data)
                    });
                    
                    if (response.ok) {
                        // Mostrar mensaje de agradecimiento
                        form.innerHTML = `
                            <div class="bg-green-50 border-l-4 border-green-400 p-4 mb-4">
                                <div class="flex">
                                    <div class="flex-shrink-0">
                                        <svg class="h-5 w-5 text-green-400" fill="currentColor" viewBox="0 0 20 20">
                                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
                                        </svg>
                                    </div>
                                    <div class="ml-3">
                                        <p class="text-sm text-green-700">
                                            ¡Gracias por completar nuestra encuesta! Sus respuestas han sido enviadas correctamente.
                                        </p>
                                    </div>
                                </div>
                            </div>
                        `;
                    } else {
                        const errorData = await response.json();
                        throw new Error(errorData.message || 'Error al enviar la encuesta.');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    const errorMessage = document.createElement('div');
                    errorMessage.className = 'bg-red-50 border-l-4 border-red-400 p-4 mb-4';
                    errorMessage.innerHTML = `
                        <div class="flex">
                            <div class="flex-shrink-0">
                                <svg class="h-5 w-5 text-red-400" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"/>
                                </svg>
                            </div>
                            <div class="ml-3">
                                <p class="text-sm text-red-700">
                                    ${error.message}
                                </p>
                            </div>
                        </div>
                    `;
                    form.prepend(errorMessage);
                }
            });
        });
    </script>
}
