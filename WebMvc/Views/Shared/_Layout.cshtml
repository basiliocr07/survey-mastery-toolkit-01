
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - SurveyApp</title>
    
    <!-- Tailwind y Estilos Personalizados -->
    <link rel="stylesheet" href="~/css/site.css" />
    <link rel="stylesheet" href="~/css/tailwind-custom.css" />
    <link rel="stylesheet" href="~/css/utility-fixes.css" />
    
    <!-- Font Awesome para iconos -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
    
    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="~/js/tailwind-config.js"></script>
    
    @await RenderSectionAsync("Styles", required: false)
</head>
<body class="min-h-screen bg-background flex flex-col">
    <!-- App Root - React Style -->
    <div id="app-root">
        <!-- Notifications - Toast Style -->
        <partial name="_Notifications" />
        
        <!-- Header Navigation -->
        <partial name="_ClientNavigation" />
        
        <!-- Main Content - React Style Container -->
        <main class="flex-grow pt-16 transition-all duration-300 ease-in-out">
            @RenderBody()
        </main>
        
        <!-- Footer -->
        <footer class="bg-gray-100 border-t border-gray-200 py-4">
            <div class="container mx-auto px-4">
                <div class="text-center text-sm text-gray-600">
                    &copy; @DateTime.Now.Year - SurveyApp - <a href="#" class="text-primary hover:underline">Política de privacidad</a>
                </div>
            </div>
        </footer>
    </div>
    
    <!-- Scripts -->
    <script src="~/js/site.js"></script>
    
    <script>
        // Scripts para simular comportamiento de React
        document.addEventListener('DOMContentLoaded', function() {
            // Añadir efecto de transición a las páginas
            const mainContent = document.querySelector('main');
            if (mainContent) {
                mainContent.classList.add('opacity-0');
                setTimeout(() => {
                    mainContent.classList.replace('opacity-0', 'opacity-100');
                }, 50);
            }
            
            // Interceptar links internos para simular transiciones SPA
            document.querySelectorAll('a[href^="/"]').forEach(link => {
                if (!link.getAttribute('data-no-spa')) {
                    link.addEventListener('click', function(e) {
                        const href = this.getAttribute('href');
                        // Excluir login/logout/etc
                        if (href && 
                            !href.includes('/Account/Logout') && 
                            !href.includes('/Account/Login') && 
                            !href.startsWith('#') &&
                            !this.getAttribute('target')) {
                            
                            // Simular transición SPA
                            if (mainContent) {
                                mainContent.classList.replace('opacity-100', 'opacity-0');
                            }
                        }
                    });
                }
            });
        });
    </script>
    
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
