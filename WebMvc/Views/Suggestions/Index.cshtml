
@model SurveyApp.WebMvc.Models.SuggestionIndexViewModel
@{
    ViewData["Title"] = "Customer Suggestions";
}

<div class="w-full px-4 sm:px-6 lg:px-8 pb-10">
    <div class="w-full max-w-[900px] mx-auto bg-white p-6">
        <div class="flex justify-between items-center mb-8">
            <div>
                <h1 class="text-3xl font-bold tracking-tight sm:text-4xl mb-2">Customer Suggestions</h1>
                <p class="text-muted-foreground">
                    Review and manage customer feedback and suggestions
                </p>
            </div>
            
            <div class="flex space-x-2">
                <a asp-action="Reports" class="btn btn-outline btn-sm">
                    <i class="fas fa-chart-bar mr-2"></i>View Reports
                </a>
                <button type="button" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#addSuggestionModal">
                    <i class="fas fa-plus mr-2"></i>Add Suggestion
                </button>
            </div>
        </div>
        
        <!-- Filter Tabs -->
        <div class="border rounded-lg overflow-hidden mb-6">
            <div class="bg-accent/30 px-4 py-3 border-b">
                <div class="flex space-x-2">
                    <button class="px-3 py-1 rounded-md bg-primary text-white" onclick="filterSuggestions('all')">
                        All
                    </button>
                    <button class="px-3 py-1 rounded-md hover:bg-accent" onclick="filterSuggestions('new')">
                        New
                    </button>
                    <button class="px-3 py-1 rounded-md hover:bg-accent" onclick="filterSuggestions('inProgress')">
                        In Progress
                    </button>
                    <button class="px-3 py-1 rounded-md hover:bg-accent" onclick="filterSuggestions('completed')">
                        Completed
                    </button>
                    <button class="px-3 py-1 rounded-md hover:bg-accent" onclick="filterSuggestions('rejected')">
                        Rejected
                    </button>
                </div>
            </div>
            
            <!-- Suggestions List -->
            <div id="suggestionsList">
                @if (Model.Suggestions != null && Model.Suggestions.Any())
                {
                    foreach (var suggestion in Model.Suggestions)
                    {
                        <div class="suggestion-item p-4 border-b hover:bg-accent/10 transition-colors" data-status="@suggestion.Status.ToLower()">
                            <div class="flex justify-between">
                                <div class="mb-2">
                                    <div class="flex items-center space-x-2">
                                        <span class="text-lg font-medium">@suggestion.Content</span>
                                        @switch (suggestion.Status.ToLower())
                                        {
                                            case "new":
                                                <span class="px-2 py-0.5 text-xs rounded-full bg-blue-100 text-blue-800">New</span>
                                                break;
                                            case "in progress":
                                                <span class="px-2 py-0.5 text-xs rounded-full bg-yellow-100 text-yellow-800">In Progress</span>
                                                break;
                                            case "completed":
                                                <span class="px-2 py-0.5 text-xs rounded-full bg-green-100 text-green-800">Completed</span>
                                                break;
                                            case "rejected":
                                                <span class="px-2 py-0.5 text-xs rounded-full bg-red-100 text-red-800">Rejected</span>
                                                break;
                                        }
                                    </div>
                                    <p class="text-sm text-muted-foreground">
                                        From @suggestion.CustomerName - @suggestion.CreatedAt.ToShortDateString()
                                    </p>
                                </div>
                                <div class="flex space-x-1">
                                    <a href="@Url.Action("View", new { id = suggestion.Id })" class="p-1 text-primary hover:text-primary/80">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    <button class="p-1 text-primary hover:text-primary/80" onclick="updateSuggestionStatus('@suggestion.Id')">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                </div>
                            </div>
                            @if (!string.IsNullOrEmpty(suggestion.Response))
                            {
                                <div class="mt-2 pl-4 border-l-2 border-primary/30 text-sm">
                                    <p class="text-muted-foreground">Response: @suggestion.Response</p>
                                </div>
                            }
                        </div>
                    }
                }
                else
                {
                    <div class="p-8 text-center">
                        <div class="rounded-full bg-primary/10 text-primary w-12 h-12 flex items-center justify-center mx-auto mb-4">
                            <i class="fas fa-lightbulb text-xl"></i>
                        </div>
                        <h3 class="text-lg font-medium mb-1">No suggestions yet</h3>
                        <p class="text-muted-foreground mb-4">Start collecting customer feedback and suggestions</p>
                        <button type="button" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#addSuggestionModal">
                            <i class="fas fa-plus mr-2"></i>Add Suggestion
                        </button>
                    </div>
                }
            </div>
        </div>
        
        <!-- Key Metrics -->
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 mb-6">
            <div class="card p-4 bg-primary/5">
                <div class="text-lg font-bold">@Model.TotalSuggestions</div>
                <div class="text-sm text-muted-foreground">Total Suggestions</div>
            </div>
            <div class="card p-4 bg-blue-50">
                <div class="text-lg font-bold">@Model.NewSuggestions</div>
                <div class="text-sm text-muted-foreground">New</div>
            </div>
            <div class="card p-4 bg-yellow-50">
                <div class="text-lg font-bold">@Model.InProgressSuggestions</div>
                <div class="text-sm text-muted-foreground">In Progress</div>
            </div>
            <div class="card p-4 bg-green-50">
                <div class="text-lg font-bold">@Model.CompletedSuggestions</div>
                <div class="text-sm text-muted-foreground">Completed</div>
            </div>
        </div>
    </div>
</div>

<!-- Add Suggestion Modal -->
<div class="modal fade" id="addSuggestionModal" tabindex="-1" role="dialog" aria-labelledby="addSuggestionModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addSuggestionModalLabel">Add New Suggestion</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form asp-action="Create" method="post">
                <div class="modal-body">
                    <div class="space-y-4">
                        <div class="space-y-2">
                            <label for="CustomerName" class="text-sm font-medium">Customer Name</label>
                            <input type="text" id="CustomerName" name="CustomerName" class="form-input w-full rounded-md border" required />
                        </div>
                        
                        <div class="space-y-2">
                            <label for="CustomerEmail" class="text-sm font-medium">Customer Email</label>
                            <input type="email" id="CustomerEmail" name="CustomerEmail" class="form-input w-full rounded-md border" required />
                        </div>
                        
                        <div class="space-y-2">
                            <label for="Content" class="text-sm font-medium">Suggestion</label>
                            <textarea id="Content" name="Content" rows="4" class="form-textarea w-full rounded-md border" required></textarea>
                        </div>
                        
                        <div class="space-y-2">
                            <label for="Type" class="text-sm font-medium">Type</label>
                            <select id="Type" name="Type" class="form-select w-full rounded-md border">
                                <option value="Feature Request">Feature Request</option>
                                <option value="Improvement">Improvement</option>
                                <option value="Bug Report">Bug Report</option>
                                <option value="Other">Other</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Add Suggestion</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Update Status Modal -->
<div class="modal fade" id="updateStatusModal" tabindex="-1" role="dialog" aria-labelledby="updateStatusModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateStatusModalLabel">Update Suggestion Status</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form asp-action="UpdateStatus" method="post">
                <input type="hidden" id="SuggestionId" name="Id" />
                <div class="modal-body">
                    <div class="space-y-4">
                        <div class="space-y-2">
                            <label for="Status" class="text-sm font-medium">Status</label>
                            <select id="Status" name="Status" class="form-select w-full rounded-md border">
                                <option value="New">New</option>
                                <option value="In Progress">In Progress</option>
                                <option value="Completed">Completed</option>
                                <option value="Rejected">Rejected</option>
                            </select>
                        </div>
                        
                        <div class="space-y-2">
                            <label for="Response" class="text-sm font-medium">Response (Optional)</label>
                            <textarea id="Response" name="Response" rows="3" class="form-textarea w-full rounded-md border"></textarea>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Update Status</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function filterSuggestions(status) {
            const suggestionItems = document.querySelectorAll('.suggestion-item');
            
            suggestionItems.forEach(item => {
                if (status === 'all' || item.dataset.status === status) {
                    item.style.display = 'block';
                } else {
                    item.style.display = 'none';
                }
            });
            
            // Update active filter button
            const filterButtons = document.querySelectorAll('.bg-accent/30 button');
            filterButtons.forEach(button => {
                button.classList.remove('bg-primary', 'text-white');
                button.classList.add('hover:bg-accent');
            });
            
            const activeButton = Array.from(filterButtons).find(button => 
                button.textContent.trim().toLowerCase() === (status === 'all' ? 'all' : status)
            );
            
            if (activeButton) {
                activeButton.classList.add('bg-primary', 'text-white');
                activeButton.classList.remove('hover:bg-accent');
            }
        }
        
        function updateSuggestionStatus(id) {
            document.getElementById('SuggestionId').value = id;
            $('#updateStatusModal').modal('show');
        }
    </script>
}
