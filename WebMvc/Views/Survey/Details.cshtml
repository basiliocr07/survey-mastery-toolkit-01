
@model SurveyApp.Application.DTOs.SurveyDto

@{
    ViewData["Title"] = "Survey Details";
}

<div class="container mx-auto px-4 py-8">
    <div class="flex justify-between items-center mb-6">
        <h1 class="text-3xl font-bold">@Model.Title</h1>
        <div class="flex space-x-2">
            <a asp-action="Edit" asp-route-id="@Model.Id" class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded">Edit</a>
            <a asp-action="Index" class="bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-4 rounded">Back to List</a>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4" role="alert">
            <span class="block sm:inline">@TempData["SuccessMessage"]</span>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
            <span class="block sm:inline">@TempData["ErrorMessage"]</span>
        </div>
    }

    <div class="bg-white shadow-md rounded-lg p-6 mb-6">
        <dl class="grid grid-cols-1 md:grid-cols-2 gap-x-4 gap-y-6">
            <div class="col-span-2">
                <dt class="text-sm font-medium text-gray-500">Description</dt>
                <dd class="mt-1 text-gray-900">@(string.IsNullOrEmpty(Model.Description) ? "No description" : Model.Description)</dd>
            </div>
            
            <div>
                <dt class="text-sm font-medium text-gray-500">Created</dt>
                <dd class="mt-1 text-gray-900">@Model.CreatedAt.ToString("MMMM dd, yyyy")</dd>
            </div>
            
            <div>
                <dt class="text-sm font-medium text-gray-500">Number of Responses</dt>
                <dd class="mt-1 text-gray-900">@Model.Responses</dd>
            </div>
            
            <div>
                <dt class="text-sm font-medium text-gray-500">Completion Rate</dt>
                <dd class="mt-1 text-gray-900">@Model.CompletionRate%</dd>
            </div>
            
            <div>
                <dt class="text-sm font-medium text-gray-500">Delivery Type</dt>
                <dd class="mt-1 text-gray-900">@Model.DeliveryConfig.Type</dd>
            </div>
        </dl>
    </div>

    <h2 class="text-2xl font-bold mb-4">Questions</h2>
    
    <div class="space-y-4 mb-8">
        @foreach (var question in Model.Questions)
        {
            <div class="bg-white shadow-md rounded-lg p-4">
                <div class="flex justify-between">
                    <h3 class="text-lg font-semibold">@question.Title</h3>
                    <span class="text-sm px-2 py-1 bg-blue-100 text-blue-800 rounded">@question.Type</span>
                </div>
                
                @if (!string.IsNullOrEmpty(question.Description))
                {
                    <p class="text-gray-700 mt-2">@question.Description</p>
                }
                
                @if (question.Options != null && question.Options.Any())
                {
                    <div class="mt-3">
                        <h4 class="text-sm font-medium text-gray-500">Options:</h4>
                        <ul class="list-disc pl-5 mt-1">
                            @foreach (var option in question.Options)
                            {
                                <li>@option</li>
                            }
                        </ul>
                    </div>
                }
                
                <div class="mt-2 text-sm text-gray-500">
                    @(question.Required ? "Required" : "Optional")
                </div>
            </div>
        }
    </div>

    <div class="bg-white shadow-md rounded-lg p-6 mb-6">
        <h2 class="text-xl font-bold mb-4">Email Delivery</h2>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
                <h3 class="text-lg font-medium mb-2">Recipients</h3>
                @if (Model.DeliveryConfig.EmailAddresses != null && Model.DeliveryConfig.EmailAddresses.Any())
                {
                    <ul class="list-disc pl-5">
                        @foreach (var email in Model.DeliveryConfig.EmailAddresses)
                        {
                            <li>@email</li>
                        }
                    </ul>
                }
                else
                {
                    <p class="text-gray-500">No recipients configured</p>
                }
            </div>
            
            <div>
                <h3 class="text-lg font-medium mb-2">Configuration</h3>
                <dl class="space-y-2">
                    @if (Model.DeliveryConfig.Type == "Scheduled")
                    {
                        <div>
                            <dt class="text-sm font-medium text-gray-500">Frequency</dt>
                            <dd>@Model.DeliveryConfig.Schedule.Frequency</dd>
                        </div>
                        
                        @if (!string.IsNullOrEmpty(Model.DeliveryConfig.Schedule.DayOfMonth.ToString()))
                        {
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Day of Month</dt>
                                <dd>@Model.DeliveryConfig.Schedule.DayOfMonth</dd>
                            </div>
                        }
                        
                        @if (Model.DeliveryConfig.Schedule.StartDate.HasValue)
                        {
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Start Date</dt>
                                <dd>@Model.DeliveryConfig.Schedule.StartDate.Value.ToString("MMMM dd, yyyy")</dd>
                            </div>
                        }
                    }
                    else if (Model.DeliveryConfig.Type == "Triggered")
                    {
                        <div>
                            <dt class="text-sm font-medium text-gray-500">Trigger Type</dt>
                            <dd>@Model.DeliveryConfig.Trigger.Type</dd>
                        </div>
                        
                        <div>
                            <dt class="text-sm font-medium text-gray-500">Delay (hours)</dt>
                            <dd>@Model.DeliveryConfig.Trigger.DelayHours</dd>
                        </div>
                        
                        <div>
                            <dt class="text-sm font-medium text-gray-500">Send Automatically</dt>
                            <dd>@(Model.DeliveryConfig.Trigger.SendAutomatically ? "Yes" : "No")</dd>
                        </div>
                    }
                </dl>
            </div>
        </div>
        
        <div class="flex justify-between items-center mt-6">
            <form asp-action="SendEmails" asp-route-id="@Model.Id" method="post" class="inline">
                @Html.AntiForgeryToken()
                <button type="submit" class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded">
                    Send Emails Now
                </button>
            </form>
            
            <!-- Test Email Form -->
            <div class="bg-gray-100 p-4 rounded-lg">
                <h3 class="text-lg font-medium mb-2">Send Test Email</h3>
                <form asp-action="SendTestEmail" asp-route-id="@Model.Id" method="post" class="flex space-x-2">
                    @Html.AntiForgeryToken()
                    <input type="email" name="email" value="ubcruz2@gmail.com" placeholder="Email address" class="px-4 py-2 border rounded" />
                    <button type="submit" class="bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded">
                        Send Test
                    </button>
                </form>
            </div>
        </div>
    </div>
    
    <div class="flex justify-between mt-8">
        <a asp-action="Delete" asp-route-id="@Model.Id" class="bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded">
            Delete Survey
        </a>
    </div>
</div>
