
@model Tuple<SurveyApp.WebMvc.Models.QuestionViewModel, int>
@{
    var question = Model.Item1;
    var index = Model.Item2;
}

<div class="question-item bg-white shadow-sm rounded-lg border p-4" data-index="@index">
    <div class="flex justify-between mb-4">
        <h3 class="font-medium">Question @(index + 1)</h3>
        <div class="flex space-x-2">
            <button type="button" class="move-up text-gray-500 hover:text-gray-700">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-5 w-5"><polyline points="18 15 12 9 6 15"></polyline></svg>
            </button>
            <button type="button" class="move-down text-gray-500 hover:text-gray-700">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-5 w-5"><polyline points="6 9 12 15 18 9"></polyline></svg>
            </button>
            <button type="button" class="delete-question text-red-500 hover:text-red-700">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-5 w-5"><path d="M3 6h18"></path><path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6"></path><path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2"></path></svg>
            </button>
        </div>
    </div>
    
    <div class="space-y-3">
        <input type="hidden" name="Questions[@index].Id" id="Questions_@(index)__Id" value="@question.Id" />
        <input type="hidden" name="Questions[@index].Title" id="Questions_@(index)__Title" value="@question.Title" />
        <input type="hidden" name="Questions[@index].Description" id="Questions_@(index)__Description" value="@question.Description" />
        <input type="hidden" name="Questions[@index].Type" id="Questions_@(index)__Type" value="@question.Type" />
        <input type="hidden" name="Questions[@index].Required" id="Questions_@(index)__Required" value="@question.Required.ToString().ToLower()" />
        
        <div>
            <label class="block text-sm font-medium mb-1">Question Title</label>
            <input type="text" class="question-title w-full px-3 py-2 border border-gray-300 rounded-md"
                   value="@question.Title" 
                   onchange="updateHiddenField(this, 'Questions_@(index)__Title')" />
            <span class="field-validation-valid text-danger text-sm" data-valmsg-for="Questions[@index].Title" data-valmsg-replace="true"></span>
        </div>
        
        <div>
            <label class="block text-sm font-medium mb-1">Question Type</label>
            <select class="question-type w-full px-3 py-2 border border-gray-300 rounded-md"
                    onchange="updateQuestionType(this, @index)">
                <option value="SingleChoice" @(question.Type == "SingleChoice" ? "selected" : "")>Single Choice</option>
                <option value="MultipleChoice" @(question.Type == "MultipleChoice" ? "selected" : "")>Multiple Choice</option>
                <option value="Text" @(question.Type == "Text" ? "selected" : "")>Text</option>
                <option value="Rating" @(question.Type == "Rating" ? "selected" : "")>Rating</option>
            </select>
        </div>
        
        <div class="options-container @(question.Type == "Text" || question.Type == "Rating" ? "hidden" : "")">
            <label class="block text-sm font-medium mb-1">Options</label>
            <div class="options-list space-y-2">
                @for (var j = 0; j < question.Options.Count; j++)
                {
                    <div class="flex items-center">
                        <input type="hidden" name="Questions[@index].Options[@j]" value="@question.Options[j]" />
                        <input type="text" class="option-input flex-1 px-3 py-1 border border-gray-300 rounded-md"
                               value="@question.Options[j]"
                               onchange="updateOptionValue(this, @index, @j)" />
                        <button type="button" class="remove-option ml-2 text-red-500">Ã—</button>
                    </div>
                }
            </div>
            <button type="button" class="add-option mt-2 text-sm text-blue-600">+ Add Option</button>
        </div>
        
        <div class="flex items-center mt-2">
            <input type="checkbox" class="required-checkbox mr-2" 
                   @(question.Required ? "checked" : "")
                   onchange="updateRequiredField(this, @index)" />
            <label class="text-sm">Required</label>
        </div>
    </div>
</div>
