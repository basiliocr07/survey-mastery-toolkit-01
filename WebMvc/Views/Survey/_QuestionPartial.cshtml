
@model Tuple<SurveyApp.WebMvc.Models.QuestionViewModel, int>
@{
    var question = Model.Item1;
    var index = Model.Item2;
}

<div class="question-item bg-white shadow-sm rounded-lg border p-4 mb-4" data-index="@index">
    <div class="flex justify-between mb-4">
        <h3 class="font-medium">Question @(index + 1)</h3>
        <div class="flex space-x-2">
            <button type="button" class="move-up text-gray-500 hover:text-gray-700">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-5 w-5"><polyline points="18 15 12 9 6 15"></polyline></svg>
            </button>
            <button type="button" class="move-down text-gray-500 hover:text-gray-700">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-5 w-5"><polyline points="6 9 12 15 18 9"></polyline></svg>
            </button>
            <button type="button" class="delete-question text-red-500 hover:text-red-700">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-5 w-5"><path d="M3 6h18"></path><path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6"></path><path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2"></path></svg>
            </button>
        </div>
    </div>
    
    <div class="space-y-3">
        <input type="hidden" name="Questions[@index].Id" id="Questions_@(index)__Id" value="@question.Id" />
        <input type="hidden" name="Questions[@index].Title" id="Questions_@(index)__Title" value="@question.Title" />
        <input type="hidden" name="Questions[@index].Description" id="Questions_@(index)__Description" value="@question.Description" />
        <input type="hidden" name="Questions[@index].Type" id="Questions_@(index)__Type" value="@question.Type" />
        <input type="hidden" name="Questions[@index].Required" id="Questions_@(index)__Required" value="@question.Required.ToString().ToLower()" />
        
        <div>
            <label class="block text-sm font-medium mb-1">Question Title</label>
            <input type="text" class="question-title w-full px-3 py-2 border border-gray-300 rounded-md"
                   value="@question.Title" 
                   onchange="updateHiddenField(this, 'Questions_@(index)__Title')" />
            <span class="field-validation-valid text-danger text-sm" data-valmsg-for="Questions[@index].Title" data-valmsg-replace="true"></span>
        </div>
        
        <div>
            <label class="block text-sm font-medium mb-1">Question Type</label>
            <select class="question-type w-full px-3 py-2 border border-gray-300 rounded-md"
                    onchange="updateQuestionType(this, @index)">
                @if (question.Type == "Text")
                {
                    <option value="Text" selected>Text</option>
                }
                else
                {
                    <option value="Text">Text</option>
                }
                
                @if (question.Type == "SingleChoice")
                {
                    <option value="SingleChoice" selected>Single Choice</option>
                }
                else
                {
                    <option value="SingleChoice">Single Choice</option>
                }
                
                @if (question.Type == "MultipleChoice")
                {
                    <option value="MultipleChoice" selected>Multiple Choice</option>
                }
                else
                {
                    <option value="MultipleChoice">Multiple Choice</option>
                }
                
                @if (question.Type == "Rating")
                {
                    <option value="Rating" selected>Rating</option>
                }
                else
                {
                    <option value="Rating">Rating</option>
                }
                
                @if (question.Type == "NPS")
                {
                    <option value="NPS" selected>Net Promoter Score (NPS)</option>
                }
                else
                {
                    <option value="NPS">Net Promoter Score (NPS)</option>
                }
            </select>
        </div>
        
        <div class="options-container @(question.Type == "Text" || question.Type == "Rating" || question.Type == "NPS" ? "hidden" : "")">
            <label class="block text-sm font-medium mb-1">Options</label>
            <div class="options-list space-y-2">
                @if (question.Options != null)
                {
                    @for (var j = 0; j < question.Options.Count; j++)
                    {
                        <div class="flex items-center">
                            <input type="hidden" name="Questions[@index].Options[@j]" value="@question.Options[j]" />
                            <input type="text" class="option-input flex-1 px-3 py-1 border border-gray-300 rounded-md"
                                   value="@question.Options[j]"
                                   onchange="updateOptionValue(this, @index, @j)" />
                            <button type="button" class="remove-option ml-2 text-red-500">×</button>
                        </div>
                    }
                }
            </div>
            <button type="button" class="add-option mt-2 text-sm text-blue-600">+ Add Option</button>
        </div>
        
        <div class="rating-settings-container @(question.Type == "Rating" ? "" : "hidden")">
            <div class="flex gap-4 mt-3">
                <div class="flex-1">
                    <label class="block text-sm font-medium mb-1">Min Value</label>
                    <input type="number" class="min-value w-full px-3 py-2 border border-gray-300 rounded-md" 
                           value="@(question.Settings?.MinValue ?? 1)" min="1" max="10" 
                           onchange="updateRatingMinValue(this, @index)" />
                </div>
                <div class="flex-1">
                    <label class="block text-sm font-medium mb-1">Max Value</label>
                    <input type="number" class="max-value w-full px-3 py-2 border border-gray-300 rounded-md" 
                           value="@(question.Settings?.MaxValue ?? 5)" min="1" max="10" 
                           onchange="updateRatingMaxValue(this, @index)" />
                </div>
            </div>
            <div class="mt-2">
                <div class="rating-preview text-center py-2">
                    <p class="text-sm mb-2">Rating Preview:</p>
                    <div class="flex justify-center gap-1">
                        @for (var i = 1; i <= (question.Settings?.MaxValue ?? 5); i++)
                        {
                            <span class="star-preview inline-block text-2xl cursor-default @(i <= 3 ? "text-yellow-400" : "text-gray-300")">★</span>
                        }
                    </div>
                </div>
            </div>
        </div>
        
        <div class="nps-settings-container @(question.Type == "NPS" ? "" : "hidden")">
            <div class="mt-3">
                <div class="nps-preview">
                    <p class="text-sm mb-2">NPS Preview:</p>
                    <div class="grid grid-cols-11 gap-1 mt-2">
                        @for (var i = 0; i <= 10; i++)
                        {
                            <div class="text-center">
                                <div class="@(i == 7 ? "bg-primary text-white" : "border border-gray-300") h-10 rounded-md flex items-center justify-center">
                                    @i
                                </div>
                            </div>
                        }
                    </div>
                    <div class="flex justify-between text-sm text-gray-500 mt-2">
                        <span>@(question.Settings?.LowLabel ?? "No es probable")</span>
                        <span>@(question.Settings?.MiddleLabel ?? "Neutral")</span>
                        <span>@(question.Settings?.HighLabel ?? "Muy probable")</span>
                    </div>
                </div>
                <div class="space-y-3 mt-4">
                    <div>
                        <label class="block text-sm font-medium mb-1">Low Label</label>
                        <input type="text" class="low-label w-full px-3 py-2 border border-gray-300 rounded-md" 
                               value="@(question.Settings?.LowLabel ?? "No es probable")" 
                               onchange="updateNPSLabel(this, @index, 'low')" />
                    </div>
                    <div>
                        <label class="block text-sm font-medium mb-1">Middle Label</label>
                        <input type="text" class="middle-label w-full px-3 py-2 border border-gray-300 rounded-md" 
                               value="@(question.Settings?.MiddleLabel ?? "Neutral")" 
                               onchange="updateNPSLabel(this, @index, 'middle')" />
                    </div>
                    <div>
                        <label class="block text-sm font-medium mb-1">High Label</label>
                        <input type="text" class="high-label w-full px-3 py-2 border border-gray-300 rounded-md" 
                               value="@(question.Settings?.HighLabel ?? "Muy probable")" 
                               onchange="updateNPSLabel(this, @index, 'high')" />
                    </div>
                </div>
            </div>
        </div>
        
        <div class="flex items-center mt-2">
            <input type="checkbox" class="required-checkbox mr-2" 
                   @(question.Required ? "checked" : "")
                   onchange="updateRequiredField(this, @index)" />
            <label class="text-sm">Required</label>
        </div>
    </div>
</div>
