
@model List<SurveyApp.Application.DTOs.SuggestionDto>
@{
    var isAdmin = (bool)ViewData["IsAdmin"];
}

<div class="card">
    <div class="card-header">
        <div class="card-title flex items-center gap-2">
            <i class="fas fa-comment h-5 w-5"></i>
            Customer Suggestions
        </div>
        <div class="card-description">
            Browse and manage customer feedback and suggestions
        </div>
        
        <div class="flex flex-col md:flex-row gap-4 mt-4">
            <div class="relative flex-grow">
                <i class="fas fa-search absolute left-3 top-3 h-4 w-4 text-muted-foreground"></i>
                <input type="text" 
                       id="searchInput" 
                       placeholder="Search suggestions..." 
                       class="form-input pl-10" 
                       onkeyup="filterSuggestions()"/>
            </div>
            
            <div class="flex gap-2">
                <div class="form-select-container relative w-[140px]">
                    <select id="statusFilter" class="form-select" onchange="filterSuggestions()">
                        <option value="">All Statuses</option>
                        <option value="new">New</option>
                        <option value="reviewed">Reviewed</option>
                        <option value="implemented">Implemented</option>
                        <option value="rejected">Rejected</option>
                    </select>
                </div>
                
                <div class="form-select-container relative w-[140px]">
                    <select id="categoryFilter" class="form-select" onchange="filterSuggestions()">
                        <option value="">All Categories</option>
                        @{
                            var categories = Model.Select(s => s.Category).Distinct().Where(c => !string.IsNullOrEmpty(c));
                            foreach (var category in categories)
                            {
                                <option value="@category">@category</option>
                            }
                        }
                    </select>
                </div>
            </div>
        </div>
    </div>
    
    <div class="card-content">
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead>
                    <tr>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Suggestion
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Customer
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Date
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Category
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Status
                        </th>
                        @if (isAdmin)
                        {
                            <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Actions
                            </th>
                        }
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    @foreach (var suggestion in Model)
                    {
                        <tr class="suggestion-row" 
                            data-status="@suggestion.Status.ToLower()" 
                            data-category="@suggestion.Category">
                            <td class="px-6 py-4 max-w-md">
                                <div class="font-medium">@(string.IsNullOrEmpty(suggestion.Title) ? suggestion.Content.Substring(0, Math.Min(50, suggestion.Content.Length)) : suggestion.Title)</div>
                                <div class="text-sm text-muted-foreground line-clamp-2">
                                    @suggestion.Content
                                </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                @(suggestion.IsAnonymous ? "Anonymous" : suggestion.CustomerName)
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="flex items-center">
                                    <i class="fas fa-calendar mr-2 h-4 w-4 text-muted-foreground"></i>
                                    @suggestion.CreatedAt.ToString("MMM d, yyyy")
                                </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                @if (!string.IsNullOrEmpty(suggestion.Category))
                                {
                                    <span class="status-badge">@suggestion.Category</span>
                                }
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <span class="status-badge @suggestion.Status.ToLower()">
                                    @suggestion.Status.Substring(0, 1).ToUpper()@suggestion.Status.Substring(1)
                                </span>
                            </td>
                            @if (isAdmin)
                            {
                                <td class="px-6 py-4 whitespace-nowrap text-right">
                                    <a href="@Url.Action("View", "Suggestions", new { id = suggestion.Id })" 
                                       class="btn btn-sm btn-outline">
                                        View
                                    </a>
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    function filterSuggestions() {
        var searchInput = document.getElementById('searchInput').value.toLowerCase();
        var statusFilter = document.getElementById('statusFilter').value.toLowerCase();
        var categoryFilter = document.getElementById('categoryFilter').value;
        
        document.querySelectorAll('.suggestion-row').forEach(function(row) {
            var rowContent = row.querySelector('td:first-child').textContent.toLowerCase();
            var rowStatus = row.getAttribute('data-status');
            var rowCategory = row.getAttribute('data-category');
            
            var matchesSearch = rowContent.includes(searchInput);
            var matchesStatus = statusFilter === '' || rowStatus === statusFilter;
            var matchesCategory = categoryFilter === '' || rowCategory === categoryFilter;
            
            if (matchesSearch && matchesStatus && matchesCategory) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });
    }
</script>
